{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\testes\\\\criar-tabela.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, InputNumber, Form, Input } from 'antd';\nimport stringify from 'csv-stringify/lib/sync';\nimport fs from 'fs';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nfunction Tabela() {\n  _s();\n  const [numLinhas, setNumLinhas] = useState(0);\n  const [numColunas, setNumColunas] = useState(0);\n  const [dados, setDados] = useState([]);\n  const handleNumLinhasChange = value => {\n    setNumLinhas(value);\n    setDados(dados => {\n      const diferenca = value - dados.length;\n      if (diferenca > 0) {\n        const novosDados = Array(diferenca).fill(null).map(() => Array(numColunas).fill(''));\n        return [...dados, ...novosDados];\n      } else {\n        return dados.slice(0, value);\n      }\n    });\n  };\n  const handleNumColunasChange = value => {\n    setNumColunas(value);\n    setDados(dados => dados.map(linha => linha.length < value ? [...linha, ...Array(value - linha.length).fill('')] : linha.slice(0, value)));\n  };\n  const handleNomeColunaChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    setDados(dados => dados.map((linha, i) => {\n      if (i === 0) {\n        return linha.map((nome, j) => j === index ? value : nome);\n      } else {\n        return linha;\n      }\n    }));\n  };\n  const handleExportarCSV = () => {\n    const csv = stringify(dados, {\n      header: true\n    });\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8'\n    });\n    saveAs(blob, 'tabela.csv');\n  };\n  const handleExportarJSON = () => {\n    const json = JSON.stringify(dados);\n    const blob = new Blob([json], {\n      type: 'text/json;charset=utf-8'\n    });\n    saveAs(blob, 'tabela.json');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        label: \"Linhas\",\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 0,\n          value: numLinhas,\n          onChange: handleNumLinhasChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        label: \"Colunas\",\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 0,\n          value: numColunas,\n          onChange: handleNumColunasChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), dados.length > 0 && dados[0].map((nomeColuna, index) => /*#__PURE__*/_jsxDEV(Item, {\n        label: `Coluna ${index + 1}`,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: nomeColuna,\n          onChange: event => handleNomeColunaChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleExportarCSV,\n      children: \"Exportar CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleExportarJSON,\n      children: \"Exportar JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Tabela, \"Hxbn7Vugk+Petqu+rninw4JfVIc=\");\n_c = Tabela;\nexport default Tabela;\nvar _c;\n$RefreshReg$(_c, \"Tabela\");","map":{"version":3,"names":["React","useState","Button","InputNumber","Form","Input","stringify","fs","saveAs","jsxDEV","_jsxDEV","Item","Tabela","_s","numLinhas","setNumLinhas","numColunas","setNumColunas","dados","setDados","handleNumLinhasChange","value","diferenca","length","novosDados","Array","fill","map","slice","handleNumColunasChange","linha","handleNomeColunaChange","event","index","target","i","nome","j","handleExportarCSV","csv","header","blob","Blob","type","handleExportarJSON","json","JSON","children","layout","label","min","onChange","fileName","_jsxFileName","lineNumber","columnNumber","nomeColuna","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/testes/criar-tabela.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, InputNumber, Form, Input } from 'antd';\r\nimport stringify from 'csv-stringify/lib/sync';\r\nimport fs from 'fs';\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\nconst { Item } = Form;\r\n\r\nfunction Tabela() {\r\n  const [numLinhas, setNumLinhas] = useState(0);\r\n  const [numColunas, setNumColunas] = useState(0);\r\n  const [dados, setDados] = useState([]);\r\n\r\n  const handleNumLinhasChange = (value) => {\r\n    setNumLinhas(value);\r\n    setDados((dados) => {\r\n      const diferenca = value - dados.length;\r\n      if (diferenca > 0) {\r\n        const novosDados = Array(diferenca)\r\n          .fill(null)\r\n          .map(() => Array(numColunas).fill(''));\r\n        return [...dados, ...novosDados];\r\n      } else {\r\n        return dados.slice(0, value);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleNumColunasChange = (value) => {\r\n    setNumColunas(value);\r\n    setDados((dados) =>\r\n      dados.map((linha) =>\r\n        linha.length < value ? [...linha, ...Array(value - linha.length).fill('')] : linha.slice(0, value),\r\n      ),\r\n    );\r\n  };\r\n\r\n  const handleNomeColunaChange = (event, index) => {\r\n    const { value } = event.target;\r\n    setDados((dados) =>\r\n      dados.map((linha, i) => {\r\n        if (i === 0) {\r\n          return linha.map((nome, j) => (j === index ? value : nome));\r\n        } else {\r\n          return linha;\r\n        }\r\n      }),\r\n    );\r\n  };\r\n\r\n  const handleExportarCSV = () => {\r\n    const csv = stringify(dados, { header: true });\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8' });\r\n    saveAs(blob, 'tabela.csv');\r\n  };\r\n  \r\n  const handleExportarJSON = () => {\r\n    const json = JSON.stringify(dados);\r\n    const blob = new Blob([json], { type: 'text/json;charset=utf-8' });\r\n    saveAs(blob, 'tabela.json');\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Form layout=\"inline\">\r\n        <Item label=\"Linhas\">\r\n          <InputNumber min={0} value={numLinhas} onChange={handleNumLinhasChange} />\r\n        </Item>\r\n        <Item label=\"Colunas\">\r\n          <InputNumber min={0} value={numColunas} onChange={handleNumColunasChange} />\r\n        </Item>\r\n        {dados.length > 0 &&\r\n          dados[0].map((nomeColuna, index) => (\r\n            <Item key={index} label={`Coluna ${index + 1}`}>\r\n              <Input value={nomeColuna} onChange={(event) => handleNomeColunaChange(event, index)} />\r\n            </Item>\r\n          ))}\r\n      </Form>\r\n      <Button onClick={handleExportarCSV}>Exportar CSV</Button>\r\n      <Button onClick={handleExportarJSON}>Exportar JSON</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tabela;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}