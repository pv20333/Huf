{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\login\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginComponent from './login';\nimport { isExpiredBoolean } from './token';\nimport Dashboard from '../../home/index'; // Importe o componente de dashboard que você deseja redirecionar após o login\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(true); // Aqui, você precisa usar o array destruturing para obter o estado e a função para atualizá-lo\n\n  useEffect(() => {\n    //setIsLoggedIn(isExpiredBoolean());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"0neqspS9hb9Y6HEhacbb0xAzpiU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Switch","Redirect","LoginComponent","isExpiredBoolean","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/login/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport LoginComponent from './login';\r\nimport {isExpiredBoolean} from './token';\r\nimport Dashboard from '../../home/index'; // Importe o componente de dashboard que você deseja redirecionar após o login\r\n\r\nconst App = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(true); // Aqui, você precisa usar o array destruturing para obter o estado e a função para atualizá-lo\r\n  \r\n    useEffect(() => {\r\n      //setIsLoggedIn(isExpiredBoolean());\r\n    }, []);\r\n  \r\n    return (\r\n      <Router>\r\n\r\n      </Router>\r\n    );\r\n  };\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,cAAc,MAAM,SAAS;AACpC,SAAQC,gBAAgB,QAAO,SAAS;AACxC,OAAOC,SAAS,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpDD,SAAS,CAAC,MAAM;IACd;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEW,OAAA,CAACR,MAAM;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEE;AAEb,CAAC;AAACN,EAAA,CAZED,GAAG;AAAAQ,EAAA,GAAHR,GAAG;AAcT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}