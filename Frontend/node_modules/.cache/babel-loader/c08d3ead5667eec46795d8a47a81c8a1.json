{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\testes3\\\\editar-formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Select, Table, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nfunction RenderizarFormulario() {\n  _s();\n  const [formularios, setFormularios] = useState([]);\n  const [tabelas, setTabelas] = useState([]);\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/editarformulario/formularios\").then(res => {\n      console.log('Resposta da API (Formulários):', res.data);\n      setFormularios(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter formulários\", error);\n    });\n    axios.get(\"http://localhost:8080/api/escolhertabela/tabelas-geral\").then(res => {\n      console.log('Resposta da API (Tabelas Geral):', res.data);\n      setTabelas(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter tabelas\", error);\n    });\n  }, []);\n  const handleFormularioChange = value => {\n    console.log('Formulário selecionado:', value);\n    setSelectedFormulario(value);\n    axios.get(`http://localhost:8080/api/editarformulario/formularios/${value}`).then(res => {\n      console.log('Resposta da API (Tabelas do Formulário):', res.data);\n      setTabelasFormulario(res.data);\n      console.log('Dados das tabelas do formulário:', res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter tabelas do formulário\", error);\n    });\n  };\n  const handleTableChange = value => {\n    console.log('Tabela selecionada:', value);\n    setSelectedTable(value);\n  };\n  const handleAddTable = () => {\n    if (selectedTable) {\n      console.log('Adicionando tabela:', selectedTable);\n      axios.get(`http://localhost:8080/api/escolhertabela/colunas/${selectedTable}`).then(res => {\n        console.log('Resposta da API (Colunas da Tabela):', res.data);\n        const newTable = {\n          ...res.data,\n          n_TabelaGeral: selectedTable,\n          colunas: res.data.colunas.map(coluna => ({\n            title: coluna.TituloColunas,\n            dataIndex: coluna.TituloColunas\n          }))\n        };\n        setTabelasFormulario([...tabelasFormulario, newTable]);\n        setSelectedTable(null);\n      }).catch(error => {\n        console.error(\"Erro ao obter colunas\", error);\n      });\n    }\n  };\n  const handleRemoveTable = tabelaIndex => {\n    const tabelaToRemove = tabelasFormulario[tabelaIndex];\n    console.log('Índice da tabela a ser removida:', tabelaIndex);\n    console.log('Tabela a ser removida:', tabelaToRemove);\n    axios.delete(`http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/tabelas/${tabelaToRemove.n_TabelaGeral}`).then(res => {\n      console.log('Resposta da API (Remover Tabela):', res);\n      const newTabelasFormulario = [...tabelasFormulario];\n      newTabelasFormulario.splice(tabelaIndex, 1);\n\n      // Atualiza a lista de tabelas do formulário na UI\n      setTabelasFormulario(newTabelasFormulario);\n\n      // Mostra uma mensagem de sucesso\n      alert('Tabela removida com sucesso!');\n    }).catch(error => {\n      console.error(error);\n      // Mostra uma mensagem de erro\n      alert('Falha ao remover tabela. Por favor, tente novamente mais tarde.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      onChange: handleFormularioChange,\n      children: formularios.map(formulario => /*#__PURE__*/_jsxDEV(Option, {\n        value: formulario.NFormulario || \"\",\n        children: formulario.TituloFormulario\n      }, formulario.NFormulario, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), selectedFormulario && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        value: selectedTable || \"\",\n        onChange: handleTableChange,\n        children: tabelas.map((tabela, index) => /*#__PURE__*/_jsxDEV(Option, {\n          value: tabela.n_TabelaGeral,\n          children: tabela.n_TabelaGeral\n        }, `option-${tabela.n_TabelaGeral || index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleAddTable,\n        children: \"Adicionar tabela\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), tabelasFormulario.map((tabela, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        dataSource: tabela.colunas,\n        columns: tabela.colunas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"danger\",\n        onClick: () => handleRemoveTable(index),\n        children: \"Remover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, `div-${tabela.n_TabelaGeral || index}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(RenderizarFormulario, \"C2d5/WXJrRzCYofk0MIxJ0s4KYY=\");\n_c = RenderizarFormulario;\nexport default RenderizarFormulario;\nvar _c;\n$RefreshReg$(_c, \"RenderizarFormulario\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","Table","Button","jsxDEV","_jsxDEV","Option","RenderizarFormulario","_s","formularios","setFormularios","tabelas","setTabelas","selectedFormulario","setSelectedFormulario","tabelasFormulario","setTabelasFormulario","selectedTable","setSelectedTable","get","then","res","console","log","data","catch","error","handleFormularioChange","value","handleTableChange","handleAddTable","newTable","n_TabelaGeral","colunas","map","coluna","title","TituloColunas","dataIndex","handleRemoveTable","tabelaIndex","tabelaToRemove","delete","newTabelasFormulario","splice","alert","children","onChange","formulario","NFormulario","TituloFormulario","fileName","_jsxFileName","lineNumber","columnNumber","tabela","index","type","onClick","dataSource","columns","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/testes3/editar-formulario.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select, Table, Button } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction RenderizarFormulario() {\r\n  const [formularios, setFormularios] = useState([]);\r\n  const [tabelas, setTabelas] = useState([]);\r\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\r\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/editarformulario/formularios\")\r\n      .then((res) => {\r\n        console.log('Resposta da API (Formulários):', res.data);\r\n        setFormularios(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter formulários\", error);\r\n      });\r\n      \r\n    axios\r\n      .get(\"http://localhost:8080/api/escolhertabela/tabelas-geral\")\r\n      .then((res) => {\r\n        console.log('Resposta da API (Tabelas Geral):', res.data);\r\n        setTabelas(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter tabelas\", error);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const handleFormularioChange = (value) => {\r\n    console.log('Formulário selecionado:', value);\r\n    setSelectedFormulario(value);\r\n    axios\r\n      .get(`http://localhost:8080/api/editarformulario/formularios/${value}`)\r\n      .then((res) => {\r\n        console.log('Resposta da API (Tabelas do Formulário):', res.data);\r\n        setTabelasFormulario(res.data);\r\n        console.log('Dados das tabelas do formulário:', res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter tabelas do formulário\", error);\r\n      });\r\n  };\r\n\r\n  const handleTableChange = (value) => {\r\n    console.log('Tabela selecionada:', value);\r\n    setSelectedTable(value);\r\n  };\r\n\r\n  const handleAddTable = () => {\r\n    if(selectedTable){\r\n      console.log('Adicionando tabela:', selectedTable);\r\n      axios\r\n        .get(`http://localhost:8080/api/escolhertabela/colunas/${selectedTable}`)\r\n        .then((res) => {\r\n          console.log('Resposta da API (Colunas da Tabela):', res.data);\r\n          const newTable = {\r\n            ...res.data,\r\n            n_TabelaGeral: selectedTable,\r\n            colunas: res.data.colunas.map((coluna) => ({\r\n              title: coluna.TituloColunas,\r\n              dataIndex: coluna.TituloColunas,\r\n            })),\r\n          };\r\n          setTabelasFormulario([...tabelasFormulario, newTable]);\r\n          setSelectedTable(null);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Erro ao obter colunas\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleRemoveTable = (tabelaIndex) => {\r\n    const tabelaToRemove = tabelasFormulario[tabelaIndex];\r\n\r\n    console.log('Índice da tabela a ser removida:', tabelaIndex);\r\n    console.log('Tabela a ser removida:', tabelaToRemove);\r\n\r\n    axios\r\n      .delete(`http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/tabelas/${tabelaToRemove.n_TabelaGeral}`)\r\n      .then((res) => {\r\n        console.log('Resposta da API (Remover Tabela):', res);\r\n        const newTabelasFormulario = [...tabelasFormulario];\r\n        newTabelasFormulario.splice(tabelaIndex, 1);\r\n\r\n        // Atualiza a lista de tabelas do formulário na UI\r\n        setTabelasFormulario(newTabelasFormulario);\r\n\r\n        // Mostra uma mensagem de sucesso\r\n        alert('Tabela removida com sucesso!');\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        // Mostra uma mensagem de erro\r\n        alert('Falha ao remover tabela. Por favor, tente novamente mais tarde.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Select onChange={handleFormularioChange}>\r\n        {formularios.map((formulario) => (\r\n          <Option\r\n            key={formulario.NFormulario}\r\n            value={formulario.NFormulario || \"\"}\r\n          >\r\n            {formulario.TituloFormulario}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n      {selectedFormulario && (\r\n        <div>\r\n          <Select value={selectedTable || \"\"} onChange={handleTableChange}>\r\n            {tabelas.map((tabela, index) => (\r\n              <Option key={`option-${tabela.n_TabelaGeral || index}`} value={tabela.n_TabelaGeral}>{tabela.n_TabelaGeral}</Option>\r\n            ))}\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddTable}>\r\n            Adicionar tabela\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {tabelasFormulario.map((tabela, index) => (\r\n        <div key={`div-${tabela.n_TabelaGeral || index}`}>\r\n          <Table dataSource={tabela.colunas} columns={tabela.colunas} />\r\n          <Button type=\"danger\" onClick={() => handleRemoveTable(index)}>Remover</Button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderizarFormulario;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}