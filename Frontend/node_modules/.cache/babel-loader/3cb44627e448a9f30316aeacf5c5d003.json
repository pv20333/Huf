{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\testes\\\\criar-tabela.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, InputNumber, Form, Input, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nfunction Tabela() {\n  _s();\n  var _dados$;\n  const [numLinhas, setNumLinhas] = useState(0);\n  const [numColunas, setNumColunas] = useState(0);\n  const [dados, setDados] = useState([]);\n  const [renderTable, setRenderTable] = useState(false);\n\n  // ... (restante do código)\n\n  const handleRenderTable = () => {\n    setRenderTable(true);\n  };\n  const columns = (_dados$ = dados[0]) === null || _dados$ === void 0 ? void 0 : _dados$.map((nomeColuna, index) => ({\n    title: nomeColuna,\n    dataIndex: `coluna${index}`,\n    key: `coluna${index}`\n  }));\n  const dataSource = dados.slice(1).map((linha, index) => {\n    const row = {};\n    linha.forEach((value, i) => {\n      row[`coluna${i}`] = value;\n    });\n    row.key = index;\n    return row;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      layout: \"inline\",\n      children: /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleRenderTable,\n          children: \"Renderizar Tabela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), renderTable && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataSource\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Tabela, \"91d7TReVStSBFRhSSlYmK1oXMpQ=\");\n_c = Tabela;\nexport default Tabela;\nvar _c;\n$RefreshReg$(_c, \"Tabela\");","map":{"version":3,"names":["React","useState","Button","InputNumber","Form","Input","Table","jsxDEV","_jsxDEV","Item","Tabela","_s","_dados$","numLinhas","setNumLinhas","numColunas","setNumColunas","dados","setDados","renderTable","setRenderTable","handleRenderTable","columns","map","nomeColuna","index","title","dataIndex","key","dataSource","slice","linha","row","forEach","value","i","children","layout","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/testes/criar-tabela.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, InputNumber, Form, Input, Table } from 'antd';\r\n\r\nconst { Item } = Form;\r\n\r\nfunction Tabela() {\r\n  const [numLinhas, setNumLinhas] = useState(0);\r\n  const [numColunas, setNumColunas] = useState(0);\r\n  const [dados, setDados] = useState([]);\r\n  const [renderTable, setRenderTable] = useState(false);\r\n\r\n  // ... (restante do código)\r\n\r\n  const handleRenderTable = () => {\r\n    setRenderTable(true);\r\n  };\r\n\r\n  const columns = dados[0]?.map((nomeColuna, index) => ({\r\n    title: nomeColuna,\r\n    dataIndex: `coluna${index}`,\r\n    key: `coluna${index}`,\r\n  }));\r\n\r\n  const dataSource = dados.slice(1).map((linha, index) => {\r\n    const row = {};\r\n    linha.forEach((value, i) => {\r\n      row[`coluna${i}`] = value;\r\n    });\r\n    row.key = index;\r\n    return row;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Form layout=\"inline\">\r\n        {/* ... (restante do código) */}\r\n        <Item>\r\n          <Button type=\"primary\" onClick={handleRenderTable}>\r\n            Renderizar Tabela\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n      {renderTable && <Table columns={columns} dataSource={dataSource} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tabela;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAM;EAAEC;AAAK,CAAC,GAAGL,IAAI;AAErB,SAASM,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,OAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;EAErD;;EAEA,MAAMoB,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAME,OAAO,IAAAV,OAAA,GAAGK,KAAK,CAAC,CAAC,CAAC,cAAAL,OAAA,uBAARA,OAAA,CAAUW,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,MAAM;IACpDC,KAAK,EAAEF,UAAU;IACjBG,SAAS,EAAG,SAAQF,KAAM,EAAC;IAC3BG,GAAG,EAAG,SAAQH,KAAM;EACtB,CAAC,CAAC,CAAC;EAEH,MAAMI,UAAU,GAAGZ,KAAK,CAACa,KAAK,CAAC,CAAC,CAAC,CAACP,GAAG,CAAC,CAACQ,KAAK,EAAEN,KAAK,KAAK;IACtD,MAAMO,GAAG,GAAG,CAAC,CAAC;IACdD,KAAK,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;MAC1BH,GAAG,CAAE,SAAQG,CAAE,EAAC,CAAC,GAAGD,KAAK;IAC3B,CAAC,CAAC;IACFF,GAAG,CAACJ,GAAG,GAAGH,KAAK;IACf,OAAOO,GAAG;EACZ,CAAC,CAAC;EAEF,oBACExB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACJ,IAAI;MAACiC,MAAM,EAAC,QAAQ;MAAAD,QAAA,eAEnB5B,OAAA,CAACC,IAAI;QAAA2B,QAAA,eACH5B,OAAA,CAACN,MAAM;UAACoC,IAAI,EAAC,SAAS;UAACC,OAAO,EAAElB,iBAAkB;UAAAe,QAAA,EAAC;QAEnD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,EACNxB,WAAW,iBAAIX,OAAA,CAACF,KAAK;MAACgB,OAAO,EAAEA,OAAQ;MAACO,UAAU,EAAEA;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/D;AAEV;AAAChC,EAAA,CAxCQD,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AA0Cf,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}