{"ast":null,"code":"/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  var resolvedValue;\n  var string = '';\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nexport { twJoin };","map":{"version":3,"sources":["../../src/lib/tw-join.ts"],"names":["twJoin","index","argument","resolvedValue","string","arguments","length","toValue","mix","k"],"mappings":"AAAA;;;;;;;;AAQG;SAMaA,MAAAA,CAAAA,EAAM;EAClB,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,QAAJ;EACA,IAAIC,aAAJ;EACA,IAAIC,MAAM,GAAG,EAAb;EAEA,OAAOH,KAAK,GAAGI,SAAS,CAACC,MAAzB,EAAiC;IAC7B,IAAKJ,QAAQ,GAAGG,SAAS,CAACJ,KAAK,EAAN,CAAzB,EAAqC;MACjC,IAAKE,aAAa,GAAGI,OAAO,CAACL,QAAD,CAA5B,EAAyC;QACrCE,MAAM,KAAKA,MAAM,IAAI,GAAf,CAANA;QACAA,MAAM,IAAID,aAAVC;MACH;IACJ;EACJ;EACD,OAAOA,MAAP;AACH;AAED,SAASG,OAAT,CAAiBC,GAAjB,EAA6C;EACzC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,OAAOA,GAAP;EACH;EAED,IAAIL,aAAJ;EACA,IAAIC,MAAM,GAAG,EAAb;EAEA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACF,MAAxB,EAAgCG,CAAC,EAAjC,EAAqC;IACjC,IAAID,GAAG,CAACC,CAAD,CAAP,EAAY;MACR,IAAKN,aAAa,GAAGI,OAAO,CAACC,GAAG,CAACC,CAAD,CAAJ,CAA5B,EAAkE;QAC9DL,MAAM,KAAKA,MAAM,IAAI,GAAf,CAANA;QACAA,MAAM,IAAID,aAAVC;MACH;IACJ;EACJ;EAED,OAAOA,MAAP;AACH","sourcesContent":["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n"]},"metadata":{},"sourceType":"module"}