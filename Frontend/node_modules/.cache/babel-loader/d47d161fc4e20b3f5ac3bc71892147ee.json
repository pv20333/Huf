{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\testes\\\\criar-tabela.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, InputNumber, Form, Input, Table } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Item\n} = Form;\nfunction Tabela() {\n  _s();\n  var _dados$;\n  const [numLinhas, setNumLinhas] = useState(0);\n  const [numColunas, setNumColunas] = useState(0);\n  const [dados, setDados] = useState([]);\n  const [renderTable, setRenderTable] = useState(false);\n  const [nomeTabela, setNomeTabela] = useState(\"\");\n  const handleNumLinhasChange = value => {\n    setNumLinhas(value + 1);\n    setDados(dados => {\n      const diferenca = value - dados.length + 1;\n      if (diferenca > 0) {\n        const novosDados = Array(diferenca).fill(null).map(() => Array(numColunas).fill(\"\"));\n        return [...dados, ...novosDados];\n      } else {\n        return dados.slice(0, value).concat([dados[dados.length - 1]]);\n      }\n    });\n  };\n  const handleNumColunasChange = value => {\n    setNumColunas(value);\n    setDados(dados => dados.map(linha => linha.length < value ? [...linha, ...Array(value - linha.length).fill(\"\")] : linha.slice(0, value)));\n  };\n  const handleNomeColunaChange = (event, index) => {\n    const {\n      value\n    } = event.target;\n    setDados(dados => dados.map((linha, i) => {\n      if (i === 0) {\n        return linha.map((nome, j) => j === index ? value : nome);\n      } else {\n        return linha;\n      }\n    }));\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Criação da tabela geral\n      const resGeral = await axios.post(\"http://localhost:8080/api/tabela/geral\", {\n        nome: nomeTabela\n      });\n\n      // Criação das colunas\n      const colunasRequests = dados[0].map(async tituloColuna => {\n        return await axios.post(\"http://localhost:8080/api/tabela/colunas\", {\n          n_TabelaGeral: resGeral.data.n_TabelaGeral,\n          colunas: [tituloColuna]\n        });\n      });\n      await Promise.all(colunasRequests);\n      console.log(\"Tabela e colunas criadas com sucesso\");\n      setRenderTable(true);\n    } catch (error) {\n      console.error(\"Erro ao criar tabela e colunas\", error);\n    }\n  };\n  const columns = (_dados$ = dados[0]) === null || _dados$ === void 0 ? void 0 : _dados$.map((nomeColuna, index) => ({\n    title: nomeColuna,\n    dataIndex: `coluna${index}`,\n    key: `coluna${index}`\n  }));\n  const dataSource = dados.slice(1).map((linha, index) => {\n    const row = {};\n    linha.forEach((value, i) => {\n      row[`coluna${i}`] = value;\n    });\n    row.key = index;\n    return row;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      layout: \"inline\",\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        label: \"Linhas\",\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 0,\n          value: Math.max(numLinhas - 1, 0),\n          onChange: handleNumLinhasChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        label: \"Colunas\",\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 0,\n          value: numColunas,\n          onChange: handleNumColunasChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Item, {\n        label: \"Nome da Tabela\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: nomeTabela,\n          onChange: event => setNomeTabela(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), dados.length > 0 && dados[0].map((nomeColuna, index) => /*#__PURE__*/_jsxDEV(Item, {\n        label: `Coluna ${index + 1}`,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: nomeColuna,\n          onChange: event => handleNomeColunaChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Item, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleFormSubmit,\n          children: \"Submeter Tabela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), renderTable && /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: dataSource,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(Tabela, \"Riq0D9sGLgoEjzOSZN+y5zt3KB4=\");\n_c = Tabela;\nexport default Tabela;\nvar _c;\n$RefreshReg$(_c, \"Tabela\");","map":{"version":3,"names":["React","useState","Button","InputNumber","Form","Input","Table","axios","jsxDEV","_jsxDEV","Item","Tabela","_s","_dados$","numLinhas","setNumLinhas","numColunas","setNumColunas","dados","setDados","renderTable","setRenderTable","nomeTabela","setNomeTabela","handleNumLinhasChange","value","diferenca","length","novosDados","Array","fill","map","slice","concat","handleNumColunasChange","linha","handleNomeColunaChange","event","index","target","i","nome","j","handleFormSubmit","preventDefault","resGeral","post","colunasRequests","tituloColuna","n_TabelaGeral","data","colunas","Promise","all","console","log","error","columns","nomeColuna","title","dataIndex","key","dataSource","row","forEach","children","layout","label","min","Math","max","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","pagination","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/testes/criar-tabela.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, InputNumber, Form, Input, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Item } = Form;\r\n\r\nfunction Tabela() {\r\n  const [numLinhas, setNumLinhas] = useState(0);\r\n  const [numColunas, setNumColunas] = useState(0);\r\n  const [dados, setDados] = useState([]);\r\n  const [renderTable, setRenderTable] = useState(false);\r\n  const [nomeTabela, setNomeTabela] = useState(\"\");\r\n\r\n  const handleNumLinhasChange = (value) => {\r\n    setNumLinhas(value + 1);\r\n    setDados((dados) => {\r\n      const diferenca = value - dados.length + 1;\r\n      if (diferenca > 0) {\r\n        const novosDados = Array(diferenca)\r\n          .fill(null)\r\n          .map(() => Array(numColunas).fill(\"\"));\r\n        return [...dados, ...novosDados];\r\n      } else {\r\n        return dados.slice(0, value).concat([dados[dados.length - 1]]);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleNumColunasChange = (value) => {\r\n    setNumColunas(value);\r\n    setDados((dados) =>\r\n      dados.map((linha) =>\r\n        linha.length < value\r\n          ? [...linha, ...Array(value - linha.length).fill(\"\")]\r\n          : linha.slice(0, value)\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleNomeColunaChange = (event, index) => {\r\n    const { value } = event.target;\r\n    setDados((dados) =>\r\n      dados.map((linha, i) => {\r\n        if (i === 0) {\r\n          return linha.map((nome, j) => (j === index ? value : nome));\r\n        } else {\r\n          return linha;\r\n        }\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      // Criação da tabela geral\r\n      const resGeral = await axios.post(\r\n        \"http://localhost:8080/api/tabela/geral\",\r\n        {\r\n          nome: nomeTabela,\r\n        }\r\n      );\r\n\r\n      // Criação das colunas\r\n      const colunasRequests = dados[0].map(async (tituloColuna) => {\r\n        return await axios.post(\"http://localhost:8080/api/tabela/colunas\", {\r\n          n_TabelaGeral: resGeral.data.n_TabelaGeral,\r\n          colunas: [tituloColuna],\r\n        });\r\n      });\r\n      await Promise.all(colunasRequests);\r\n\r\n      console.log(\"Tabela e colunas criadas com sucesso\");\r\n      setRenderTable(true);\r\n    } catch (error) {\r\n      console.error(\"Erro ao criar tabela e colunas\", error);\r\n    }\r\n  };\r\n\r\n  const columns = dados[0]?.map((nomeColuna, index) => ({\r\n    title: nomeColuna,\r\n    dataIndex: `coluna${index}`,\r\n    key: `coluna${index}`,\r\n  }));\r\n\r\n  const dataSource = dados.slice(1).map((linha, index) => {\r\n    const row = {};\r\n    linha.forEach((value, i) => {\r\n      row[`coluna${i}`] = value;\r\n    });\r\n    row.key = index;\r\n    return row;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Form layout=\"inline\">\r\n        <Item label=\"Linhas\">\r\n          <InputNumber\r\n            min={0}\r\n            value={Math.max(numLinhas - 1, 0)}\r\n            onChange={handleNumLinhasChange}\r\n          />\r\n        </Item>\r\n        <Item label=\"Colunas\">\r\n          <InputNumber\r\n            min={0}\r\n            value={numColunas}\r\n            onChange={handleNumColunasChange}\r\n          />\r\n        </Item>\r\n        <Item label=\"Nome da Tabela\">\r\n          <Input\r\n            value={nomeTabela}\r\n            onChange={(event) => setNomeTabela(event.target.value)}\r\n          />\r\n        </Item>\r\n        {dados.length > 0 &&\r\n          dados[0].map((nomeColuna, index) => (\r\n            <Item key={index} label={`Coluna ${index + 1}`}>\r\n              <Input\r\n                value={nomeColuna}\r\n                onChange={(event) => handleNomeColunaChange(event, index)}\r\n              />\r\n            </Item>\r\n          ))}\r\n        <Item>\r\n          <Button type=\"primary\" onClick={handleFormSubmit}>\r\n            Submeter Tabela\r\n          </Button>\r\n        </Item>\r\n      </Form>\r\n      {renderTable && (\r\n        <Table columns={columns} dataSource={dataSource} pagination={false} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tabela;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}