{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\parametros-padrao\\\\parametros-form\\\\criar-parametros-form\\\\criarform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DynamicTable = () => {\n  _s();\n  const [dataSource, setDataSource] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const handleAddRow = () => {\n    setDataSource(prevDataSource => [...prevDataSource, {\n      // adicione aqui as propriedades da linha que serão preenchidas pelo usuário\n      id: dataSource.length + 1,\n      name: \"\",\n      age: \"\",\n      address: \"\"\n    }]);\n  };\n  const handleAddColumn = () => {\n    setColumns(prevColumns => [...prevColumns, {\n      // adicione aqui as propriedades da coluna que serão preenchidas pelo usuário\n      title: `Column ${columns.length + 1}`,\n      dataIndex: `column${columns.length + 1}`,\n      key: `column${columns.length + 1}`\n    }]);\n  };\n  const handleDeleteRow = id => {\n    setDataSource(prevDataSource => prevDataSource.filter(row => row.id !== id));\n  };\n  const handleDeleteColumn = columnKey => {\n    setColumns(prevColumns => prevColumns.filter(column => column.key !== columnKey));\n  };\n  const handleRowDataChange = (rowId, newData) => {\n    setDataSource(prevDataSource => prevDataSource.map(row => {\n      if (row.id === rowId) {\n        return {\n          ...row,\n          ...newData\n        };\n      }\n      return row;\n    }));\n  };\n  const handleColumnDataChange = (columnKey, newData) => {\n    setColumns(prevColumns => prevColumns.map(column => {\n      if (column.key === columnKey) {\n        return {\n          ...column,\n          ...newData\n        };\n      }\n      return column;\n    }));\n  };\n  const renderDeleteRowButton = rowId => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => handleDeleteRow(rowId),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDeleteColumnButton = columnKey => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => handleDeleteColumn(columnKey),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleAddColumn,\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns.map(column => ({\n        ...column,\n        render: (_, row) => {\n          const columnKey = column.key;\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row[columnKey],\n            onChange: e => handleRowDataChange(row.id, {\n              [columnKey]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        },\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [column.title, \" \", renderDeleteColumnButton(column.key)]\n        }, void 0, true)\n      })),\n      pagination: false,\n      rowKey: \"id\",\n      footer: () => `Total Rows: ${dataSource.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DynamicTable, \"7QCrwpy1Ce476/8UVJPDV+51lK8=\");\n_c = DynamicTable;\nexport default DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","useState","Table","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","DynamicTable","_s","dataSource","setDataSource","columns","setColumns","handleAddRow","prevDataSource","id","length","name","age","address","handleAddColumn","prevColumns","title","dataIndex","key","handleDeleteRow","filter","row","handleDeleteColumn","columnKey","column","handleRowDataChange","rowId","newData","map","handleColumnDataChange","renderDeleteRowButton","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderDeleteColumnButton","render","_","value","onChange","e","target","pagination","rowKey","footer","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/parametros-padrao/parametros-form/criar-parametros-form/criarform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\n\r\nconst DynamicTable = () => {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  const handleAddRow = () => {\r\n    setDataSource((prevDataSource) => [\r\n      ...prevDataSource,\r\n      {\r\n        // adicione aqui as propriedades da linha que serão preenchidas pelo usuário\r\n        id: dataSource.length + 1,\r\n        name: \"\",\r\n        age: \"\",\r\n        address: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    setColumns((prevColumns) => [\r\n      ...prevColumns,\r\n      {\r\n        // adicione aqui as propriedades da coluna que serão preenchidas pelo usuário\r\n        title: `Column ${columns.length + 1}`,\r\n        dataIndex: `column${columns.length + 1}`,\r\n        key: `column${columns.length + 1}`,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    setDataSource((prevDataSource) =>\r\n      prevDataSource.filter((row) => row.id !== id)\r\n    );\r\n  };\r\n\r\n  const handleDeleteColumn = (columnKey) => {\r\n    setColumns((prevColumns) =>\r\n      prevColumns.filter((column) => column.key !== columnKey)\r\n    );\r\n  };\r\n\r\n  const handleRowDataChange = (rowId, newData) => {\r\n    setDataSource((prevDataSource) =>\r\n      prevDataSource.map((row) => {\r\n        if (row.id === rowId) {\r\n          return {\r\n            ...row,\r\n            ...newData,\r\n          };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleColumnDataChange = (columnKey, newData) => {\r\n    setColumns((prevColumns) =>\r\n      prevColumns.map((column) => {\r\n        if (column.key === columnKey) {\r\n          return {\r\n            ...column,\r\n            ...newData,\r\n          };\r\n        }\r\n        return column;\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderDeleteRowButton = (rowId) => {\r\n    return (\r\n      <Button type=\"link\" onClick={() => handleDeleteRow(rowId)}>\r\n        Delete\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const renderDeleteColumnButton = (columnKey) => {\r\n    return (\r\n      <Button type=\"link\" onClick={() => handleDeleteColumn(columnKey)}>\r\n        Delete\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={handleAddRow}>\r\n        Add Row\r\n      </Button>\r\n      <Button type=\"primary\" onClick={handleAddColumn}>\r\n        Add Column\r\n      </Button>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns.map((column) => ({\r\n          ...column,\r\n          render: (_, row) => {\r\n            const columnKey = column.key;\r\n            return (\r\n              <input\r\n                value={row[columnKey]}\r\n                onChange={(e) =>\r\n                  handleRowDataChange(row.id, {\r\n                    [columnKey]: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            );\r\n          },\r\n          title: (\r\n            <>\r\n              {column.title} {renderDeleteColumnButton(column.key)}\r\n            </>\r\n          ),\r\n        }))}\r\n        pagination={false}\r\n        rowKey=\"id\"\r\n        footer={() => `Total Rows: ${dataSource.length}`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}