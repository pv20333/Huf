{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\testes3\\\\editar-formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Select, Table, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nfunction RenderizarFormulario() {\n  _s();\n  const [formularios, setFormularios] = useState([]);\n  const [tabelas, setTabelas] = useState([]);\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [prioridades, setPrioridades] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/editarformulario/formularios\") // este retorna a lista de formularios\n    .then(res => {\n      console.log(\"Resposta da API (Formulários):\", res.data);\n      setFormularios(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter formulários\", error);\n    });\n    axios.get(\"http://localhost:8080/api/escolhertabela/tabelas-geral\").then(res => {\n      setTabelas(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter tabelas\", error);\n    });\n  }, []);\n  const handleFormularioChange = value => {\n    setSelectedFormulario(value);\n    axios.get(`http://localhost:8080/api/editarformulario/formularios/${value}`) //this ? sypostamente é este right? Ao selecionar um elemento vai buscar as tabelas deese form? o de cima vai buscar a lista dos formularios\n    .then(res => {\n      console.log(\"Resposta da API (Tabelas do Formulário):\", res.data);\n      setTabelasFormulario(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter tabelas do formulário\", error);\n    });\n  };\n  const handleTableChange = value => {\n    console.log('Selected table ID:', value);\n    setSelectedTable(value);\n  };\n  const handleAddTable = () => {\n    console.log('Selected table ID before adding:', selectedTable);\n    if (selectedTable) {\n      axios.get(`http://localhost:8080/api/escolhertabela/colunas/${selectedTable}`).then(res => {\n        const currentTimestamp = new Date().toISOString(); // Get the current timestamp in ISO format\n        const newTable = {\n          TabelaGeral: res.data,\n          createdAt: currentTimestamp,\n          updatedAt: currentTimestamp,\n          n_Formularios: selectedFormulario,\n          // Add your logic here to set the correct value\n          n_TabelaGeral: selectedTable,\n          prioridade: tabelasFormulario.length + 1\n        };\n        console.log(tabelasFormulario);\n        console.log(newTable);\n        setTabelasFormulario([...tabelasFormulario, newTable]);\n        setPrioridades([...prioridades, {\n          tableId: newTable.n_TabelaGeral,\n          prioridade: newTable.prioridade\n        }]); // Add the new priority to the list\n        setSelectedTable(null);\n        console.log(tabelasFormulario);\n      }).catch(error => {\n        console.error(\"Error while getting columns\", error);\n      });\n    }\n  };\n  const handleGuardar = () => {\n    const tabelasJaAdicionadas = new Set();\n\n    // Log the original tabelasFormulario\n    console.log(\"Original tabelasFormulario:\", tabelasFormulario);\n    axios.post(`http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/adicionar`, {\n      tabelas: tabelasFormulario.map((table, index) => {\n        if (!table) {\n          console.error(`Tabela na posição ${index} não está definida`);\n          return null;\n        }\n\n        // Log the value of n_TabelaGeral for each table\n        console.log(`Valor de n_TabelaGeral para tabela na posição ${index}:`, table.n_TabelaGeral);\n        if (!prioridades[index]) {\n          console.error(`Prioridade na posição ${index} não está definida`);\n          return null;\n        }\n        const id = table.n_TabelaGeral;\n        if (tabelasJaAdicionadas.has(id)) {\n          console.error(`Tabela com id ${id} já foi adicionada`);\n          return null;\n        }\n        tabelasJaAdicionadas.add(id);\n        return {\n          id,\n          prioridade: prioridades[index].prioridade\n        };\n      }).filter(Boolean)\n    }).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.error(\"Erro ao guardar\", error);\n    });\n\n    // Log the final tabelas array\n    console.log(\"Final tabelas:\", tabelasFormulario.map((table, index) => {\n      return {\n        id: table.n_TabelaGeral,\n        prioridade: prioridades[index] ? prioridades[index].prioridade : null\n      };\n    }).filter(Boolean));\n  };\n  const handleRemoveTable = tableId => {\n    axios.delete(`http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/tabelas/${tableId}`).then(res => {\n      setTabelasFormulario(tabelasFormulario.filter(tabela => tabela.n_TabelaGeral !== tableId));\n    }).catch(error => {\n      console.error(\"Erro ao remover tabela\", error);\n    });\n  };\n  const updatePrioridades = async (selectedFormulario, tableId, prioridade) => {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/editarformulario/prioridades/update`, {\n        nformulario: selectedFormulario,\n        ntabela: tableId,\n        prioridade: prioridade\n      });\n      if (response.status === 200) {\n        console.log(\"Prioridades atualizadas com sucesso\");\n      } else {\n        console.log(\"Erro ao atualizar as prioridades\");\n      }\n    } catch (error) {\n      console.log(\"Erro ao atualizar as prioridades\", error);\n    }\n  };\n  const handlePrioridadeChange = (tableId, prioridade) => {\n    // Atualiza as prioridades localmente\n    const updatedPrioridades = prioridades.map(item => {\n      if (item.tableId === tableId) {\n        return {\n          ...item,\n          prioridade\n        };\n      } else if (item.prioridade >= prioridade) {\n        return {\n          ...item,\n          prioridade: item.prioridade + 1\n        };\n      } else {\n        return item;\n      }\n    });\n    console.log(\"Im going to update: \" + tableId + \" \" + prioridade + \" for form: \" + selectedFormulario);\n    setPrioridades(updatedPrioridades);\n\n    // Atualiza as prioridades no servidor\n    updatePrioridades(selectedFormulario, tableId, prioridade);\n  };\n  useEffect(() => {\n    const newPrioridades = tabelasFormulario.map((tabela, index) => ({\n      tableId: tabela.n_TabelaGeral,\n      prioridade: index + 1\n    }));\n    setPrioridades(newPrioridades);\n  }, [tabelasFormulario]);\n  console.log(tabelasFormulario);\n  useEffect(() => {\n    if (tabelasFormulario.length) {\n      const table = tabelasFormulario[tabelasFormulario.length - 1];\n      axios.get(`http://localhost:8080/api/escolhertabela/colunas/${table.n_TabelaGeral}`).then(res => {\n        const updatedTable = {\n          ...table,\n          TabelaGeral: {\n            ...table.TabelaGeral,\n            Colunas: res.data\n          }\n        };\n        const updatedTabelasFormulario = [...tabelasFormulario];\n        updatedTabelasFormulario[tabelasFormulario.length - 1] = updatedTable;\n        setTabelasFormulario(updatedTabelasFormulario);\n      }).catch(error => {\n        console.error(\"Erro ao obter colunas da nova tabela\", error);\n      });\n    }\n  }, [tabelasFormulario]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Escolha um Formul\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200\n      },\n      onChange: handleFormularioChange,\n      children: formularios.map(formulario => /*#__PURE__*/_jsxDEV(Option, {\n        value: formulario.n_Formularios,\n        children: formulario.designacao\n      }, formulario.n_Formularios, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), tabelasFormulario.map((tabela, index) => {\n      var _tabela$TabelaGeral$C, _tabela$TabelaGeral, _tabela$TabelaGeral$C2, _tabela$TabelaGeral$n, _tabela$TabelaGeral2, _prioridades$find;\n      console.log(\"Renderizando tabela:\", tabela);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          columns: (_tabela$TabelaGeral$C = tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral = tabela.TabelaGeral) === null || _tabela$TabelaGeral === void 0 ? void 0 : (_tabela$TabelaGeral$C2 = _tabela$TabelaGeral.Colunas) === null || _tabela$TabelaGeral$C2 === void 0 ? void 0 : _tabela$TabelaGeral$C2.map(coluna => {\n            console.log(\"Processing column:\", coluna);\n            return {\n              title: coluna.TituloColunas,\n              dataIndex: coluna.TituloColunas,\n              key: coluna.n_TabelaColunas\n            };\n          })) !== null && _tabela$TabelaGeral$C !== void 0 ? _tabela$TabelaGeral$C : [],\n          dataSource: Array.from({\n            length: (_tabela$TabelaGeral$n = tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral2 = tabela.TabelaGeral) === null || _tabela$TabelaGeral2 === void 0 ? void 0 : _tabela$TabelaGeral2.numero_linhas) !== null && _tabela$TabelaGeral$n !== void 0 ? _tabela$TabelaGeral$n : 0\n          }, (_, i) => ({\n            key: i\n          })),\n          pagination: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleRemoveTable(tabela.n_TabelaGeral),\n          children: \"Remover Tabela\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 100\n          },\n          value: (_prioridades$find = prioridades.find(item => item.tableId === tabela.n_TabelaGeral)) === null || _prioridades$find === void 0 ? void 0 : _prioridades$find.prioridade,\n          onChange: value => handlePrioridadeChange(tabela.n_TabelaGeral, value),\n          children: prioridades.map((_, index) => /*#__PURE__*/_jsxDEV(Option, {\n            value: index + 1,\n            children: index + 1\n          }, index + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200\n      },\n      onChange: handleTableChange,\n      children: tabelas.map(tabela => {\n        console.log('Table ID in Select:', tabela.n_TabelaGeral); // Add this line\n        return /*#__PURE__*/_jsxDEV(Option, {\n          value: tabela.n_TabelaGeral,\n          children: tabela.designacao\n        }, tabela.n_TabelaGeral, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddTable,\n      children: \"Adicionar Tabela\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleGuardar,\n      children: \"Guardar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(RenderizarFormulario, \"LY64pWjkMadHV/wHUxVwOgyyesI=\");\n_c = RenderizarFormulario;\nexport default RenderizarFormulario;\nvar _c;\n$RefreshReg$(_c, \"RenderizarFormulario\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","Table","Button","jsxDEV","_jsxDEV","Option","RenderizarFormulario","_s","formularios","setFormularios","tabelas","setTabelas","selectedFormulario","setSelectedFormulario","tabelasFormulario","setTabelasFormulario","selectedTable","setSelectedTable","prioridades","setPrioridades","get","then","res","console","log","data","catch","error","handleFormularioChange","value","handleTableChange","handleAddTable","currentTimestamp","Date","toISOString","newTable","TabelaGeral","createdAt","updatedAt","n_Formularios","n_TabelaGeral","prioridade","length","tableId","handleGuardar","tabelasJaAdicionadas","Set","post","map","table","index","id","has","add","filter","Boolean","handleRemoveTable","delete","tabela","updatePrioridades","response","put","nformulario","ntabela","status","handlePrioridadeChange","updatedPrioridades","item","newPrioridades","updatedTable","Colunas","updatedTabelasFormulario","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","onChange","formulario","designacao","_tabela$TabelaGeral$C","_tabela$TabelaGeral","_tabela$TabelaGeral$C2","_tabela$TabelaGeral$n","_tabela$TabelaGeral2","_prioridades$find","marginBottom","columns","coluna","title","TituloColunas","dataIndex","key","n_TabelaColunas","dataSource","Array","from","numero_linhas","_","i","pagination","onClick","find","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/testes3/editar-formulario.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select, Table, Button } from \"antd\";\r\n\r\nconst { Option } = Select;\r\n\r\nfunction RenderizarFormulario() {\r\n  const [formularios, setFormularios] = useState([]);\r\n  const [tabelas, setTabelas] = useState([]);\r\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\r\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [prioridades, setPrioridades] = useState([]); \r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/editarformulario/formularios\") // este retorna a lista de formularios\r\n      .then((res) => {\r\n        console.log(\"Resposta da API (Formulários):\", res.data);\r\n        setFormularios(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter formulários\", error);\r\n      });\r\n\r\n    axios\r\n      .get(\"http://localhost:8080/api/escolhertabela/tabelas-geral\")\r\n      .then((res) => {\r\n        setTabelas(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter tabelas\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleFormularioChange = (value) => {\r\n    setSelectedFormulario(value);\r\n    axios\r\n      .get(`http://localhost:8080/api/editarformulario/formularios/${value}`) //this ? sypostamente é este right? Ao selecionar um elemento vai buscar as tabelas deese form? o de cima vai buscar a lista dos formularios\r\n      .then((res) => {\r\n        console.log(\"Resposta da API (Tabelas do Formulário):\", res.data);\r\n        setTabelasFormulario(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter tabelas do formulário\", error);\r\n      });\r\n  };\r\n\r\n  const handleTableChange = (value) => {\r\n    console.log('Selected table ID:', value);\r\n    setSelectedTable(value);\r\n  };\r\n\r\n  const handleAddTable = () => {\r\n    console.log('Selected table ID before adding:', selectedTable);\r\n    if (selectedTable) {\r\n      axios\r\n        .get(`http://localhost:8080/api/escolhertabela/colunas/${selectedTable}`)\r\n        .then((res) => {\r\n          const currentTimestamp = new Date().toISOString(); // Get the current timestamp in ISO format\r\n          const newTable = {\r\n            TabelaGeral: res.data,\r\n            createdAt: currentTimestamp,\r\n            updatedAt: currentTimestamp,\r\n            n_Formularios: selectedFormulario, // Add your logic here to set the correct value\r\n            n_TabelaGeral: selectedTable,\r\n            prioridade: tabelasFormulario.length + 1,\r\n          };\r\n    \r\n          console.log(tabelasFormulario)\r\n          console.log(newTable)\r\n    \r\n          setTabelasFormulario([...tabelasFormulario, newTable]);\r\n          setPrioridades([...prioridades, {tableId: newTable.n_TabelaGeral, prioridade: newTable.prioridade}]); // Add the new priority to the list\r\n          setSelectedTable(null);\r\n          console.log(tabelasFormulario)\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error while getting columns\", error);\r\n        });\r\n    }\r\n  };\r\n  \r\n\r\n  const handleGuardar = () => {\r\n    const tabelasJaAdicionadas = new Set();\r\n  \r\n    // Log the original tabelasFormulario\r\n    console.log(\"Original tabelasFormulario:\", tabelasFormulario);\r\n  \r\n    axios\r\n      .post(\r\n        `http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/adicionar`,\r\n        {\r\n          tabelas: tabelasFormulario.map((table, index) => {\r\n            if (!table) {\r\n              console.error(`Tabela na posição ${index} não está definida`);\r\n              return null;\r\n            }\r\n  \r\n            // Log the value of n_TabelaGeral for each table\r\n            console.log(`Valor de n_TabelaGeral para tabela na posição ${index}:`, table.n_TabelaGeral);\r\n  \r\n            if (!prioridades[index]) {\r\n              console.error(`Prioridade na posição ${index} não está definida`);\r\n              return null;\r\n            }\r\n  \r\n            const id = table.n_TabelaGeral;\r\n  \r\n            if (tabelasJaAdicionadas.has(id)) {\r\n              console.error(`Tabela com id ${id} já foi adicionada`);\r\n              return null;\r\n            }\r\n  \r\n            tabelasJaAdicionadas.add(id);\r\n  \r\n            return { id, prioridade: prioridades[index].prioridade };\r\n          }).filter(Boolean)\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao guardar\", error);\r\n      });\r\n  \r\n    // Log the final tabelas array\r\n    console.log(\"Final tabelas:\", tabelasFormulario.map((table, index) => {\r\n      return { id: table.n_TabelaGeral, prioridade: prioridades[index] ? prioridades[index].prioridade : null };\r\n    }).filter(Boolean));\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  const handleRemoveTable = (tableId) => {\r\n    axios\r\n      .delete(\r\n        `http://localhost:8080/api/editarformulario/formularios/${selectedFormulario}/tabelas/${tableId}`\r\n      )\r\n      .then((res) => {\r\n        setTabelasFormulario(\r\n          tabelasFormulario.filter((tabela) => tabela.n_TabelaGeral !== tableId)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao remover tabela\", error);\r\n      });\r\n  };\r\n\r\n  const updatePrioridades = async (selectedFormulario, tableId, prioridade) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:8080/api/editarformulario/prioridades/update`, {\r\n        nformulario: selectedFormulario,  \r\n        ntabela: tableId,\r\n        prioridade: prioridade\r\n      });\r\n      if (response.status === 200) {\r\n        console.log(\"Prioridades atualizadas com sucesso\");\r\n      } else {\r\n        console.log(\"Erro ao atualizar as prioridades\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Erro ao atualizar as prioridades\", error);\r\n    }\r\n  };\r\n\r\n  const handlePrioridadeChange = (tableId, prioridade) => {\r\n    // Atualiza as prioridades localmente\r\n    const updatedPrioridades = prioridades.map((item) => {\r\n      if (item.tableId === tableId) {\r\n        return { ...item, prioridade };\r\n      } else if (item.prioridade >= prioridade) {\r\n        return { ...item, prioridade: item.prioridade + 1 };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    console.log(\"Im going to update: \" + tableId + \" \" + prioridade  + \" for form: \" + selectedFormulario);\r\n\r\n    setPrioridades(updatedPrioridades);\r\n\r\n    // Atualiza as prioridades no servidor\r\n    updatePrioridades(selectedFormulario, tableId, prioridade);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newPrioridades = tabelasFormulario.map((tabela, index) => ({\r\n      tableId: tabela.n_TabelaGeral,\r\n      prioridade: index + 1,\r\n    }));\r\n    setPrioridades(newPrioridades);\r\n  }, [tabelasFormulario]);\r\n\r\n\r\n  console.log(tabelasFormulario)\r\n\r\n\r\n  useEffect(() => {\r\n    if(tabelasFormulario.length){\r\n      const table = tabelasFormulario[tabelasFormulario.length - 1];\r\n      axios.get(`http://localhost:8080/api/escolhertabela/colunas/${table.n_TabelaGeral}`)\r\n      .then((res) => {\r\n        const updatedTable = { ...table, TabelaGeral: { ...table.TabelaGeral, Colunas: res.data } };\r\n        const updatedTabelasFormulario = [...tabelasFormulario];\r\n        updatedTabelasFormulario[tabelasFormulario.length - 1] = updatedTable;\r\n        setTabelasFormulario(updatedTabelasFormulario);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter colunas da nova tabela\", error);\r\n      });\r\n    }\r\n  }, [tabelasFormulario]);\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Escolha um Formulário</h1>\r\n      <Select style={{ width: 200 }} onChange={handleFormularioChange}>\r\n        {formularios.map((formulario) => (\r\n          <Option\r\n            key={formulario.n_Formularios}\r\n            value={formulario.n_Formularios}\r\n          >\r\n            {formulario.designacao}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n\r\n      \r\n      {tabelasFormulario.map((tabela, index) => {\r\n        console.log(\"Renderizando tabela:\", tabela);\r\n        return (\r\n          <div key={index} style={{ marginBottom: \"20px\" }}>\r\n            <Table\r\n              columns={tabela?.TabelaGeral?.Colunas?.map((coluna) => {\r\n                console.log(\"Processing column:\", coluna);\r\n                return {\r\n                  title: coluna.TituloColunas,\r\n                  dataIndex: coluna.TituloColunas,\r\n                  key: coluna.n_TabelaColunas\r\n                }\r\n              }) ?? []}\r\n\r\n              dataSource={Array.from(\r\n                { length: tabela?.TabelaGeral?.numero_linhas ?? 0 },\r\n                (_, i) => ({\r\n                  key: i\r\n                })\r\n              )}\r\n              pagination={false}\r\n            />\r\n            <Button onClick={() => handleRemoveTable(tabela.n_TabelaGeral)}>\r\n              Remover Tabela\r\n            </Button>\r\n            <Select\r\n              style={{ width: 100 }}\r\n              value={\r\n                prioridades.find((item) => item.tableId === tabela.n_TabelaGeral)\r\n                  ?.prioridade\r\n              }\r\n              onChange={(value) =>\r\n                handlePrioridadeChange(tabela.n_TabelaGeral, value)\r\n              }\r\n            >\r\n              {prioridades.map((_, index) => (\r\n                <Option key={index + 1} value={index + 1}>\r\n                  {index + 1}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </div>\r\n        );\r\n        \r\n        })}\r\n        <Select style={{ width: 200 }} onChange={handleTableChange}>\r\n  {tabelas.map((tabela) => {\r\n    console.log('Table ID in Select:', tabela.n_TabelaGeral); // Add this line\r\n    return (\r\n      <Option key={tabela.n_TabelaGeral} value={tabela.n_TabelaGeral}>\r\n        {tabela.designacao}\r\n      </Option>\r\n    );\r\n  })}\r\n</Select>\r\n\r\n        <Button onClick={handleAddTable}>Adicionar Tabela</Button>\r\n        <Button onClick={handleGuardar}>Guardar</Button>\r\n        </div>\r\n        );\r\n        \r\n}\r\n\r\nexport default RenderizarFormulario;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}