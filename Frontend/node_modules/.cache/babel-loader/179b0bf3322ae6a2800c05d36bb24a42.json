{"ast":null,"code":"var _excluded = [\"props\", \"refresh\", \"store\"],\n  _excluded2 = [\"inputElement\", \"formElement\", \"panelElement\"],\n  _excluded3 = [\"inputElement\"],\n  _excluded4 = [\"inputElement\", \"maxLength\"],\n  _excluded5 = [\"sourceIndex\"],\n  _excluded6 = [\"sourceIndex\"],\n  _excluded7 = [\"item\", \"source\", \"sourceIndex\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport { noop } from '@algolia/autocomplete-shared';\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, isOrContainsNode, isSamsung } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n    refresh = _ref.refresh,\n    store = _ref.store,\n    setters = _objectWithoutProperties(_ref, _excluded);\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      formElement = providedProps.formElement,\n      panelElement = providedProps.panelElement,\n      rest = _objectWithoutProperties(providedProps, _excluded2);\n    function onMouseDownOrTouchStart(event) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      var isAutocompleteInteraction = store.getState().isOpen || !store.pendingRequests.isEmpty();\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      } // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n\n      var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n        return isOrContainsNode(contextNode, event.target);\n      });\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null); // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n    return _objectSpread({\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n        inputElement.blur();\n      }\n    }, rest);\n  };\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n      rest = _objectWithoutProperties(providedProps, _excluded3);\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n  var getInputProps = function getInputProps(providedProps) {\n    var _props$environment$na;\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n      store.dispatch('focus', null);\n    }\n    var _ref2 = providedProps || {},\n      inputElement = _ref2.inputElement,\n      _ref2$maxLength = _ref2.maxLength,\n      maxLength = _ref2$maxLength === void 0 ? 512 : _ref2$maxLength,\n      rest = _objectWithoutProperties(_ref2, _excluded4);\n    var activeItem = getActiveItem(store.getState());\n    var userAgent = ((_props$environment$na = props.environment.navigator) === null || _props$environment$na === void 0 ? void 0 : _props$environment$na.userAgent) || '';\n    var shouldFallbackKeyHint = isSamsung(userAgent);\n    var enterKeyHint = activeItem !== null && activeItem !== void 0 && activeItem.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search';\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? \"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId) : undefined,\n      'aria-controls': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      value: store.getState().completion || store.getState().query,\n      id: \"\".concat(props.id, \"-input\"),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n  var getAutocompleteId = function getAutocompleteId(instanceId, sourceId) {\n    return typeof sourceId !== 'undefined' ? \"\".concat(instanceId, \"-\").concat(sourceId) : instanceId;\n  };\n  var getLabelProps = function getLabelProps(providedProps) {\n    var _ref3 = providedProps || {},\n      sourceIndex = _ref3.sourceIndex,\n      rest = _objectWithoutProperties(_ref3, _excluded5);\n    return _objectSpread({\n      htmlFor: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-input\"),\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\")\n    }, rest);\n  };\n  var getListProps = function getListProps(providedProps) {\n    var _ref4 = providedProps || {},\n      sourceIndex = _ref4.sourceIndex,\n      rest = _objectWithoutProperties(_ref4, _excluded6);\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\"),\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-list\")\n    }, rest);\n  };\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n      source = providedProps.source,\n      sourceIndex = providedProps.sourceIndex,\n      rest = _objectWithoutProperties(providedProps, _excluded7);\n    return _objectSpread({\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-item-\").concat(item.__autocomplete_id),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n            itemInputValue = activeItem.itemInputValue,\n            itemUrl = activeItem.itemUrl,\n            _source = activeItem.source;\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        }); // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}","map":{"version":3,"names":["_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","noop","onInput","onKeyDown","_onKeyDown","getActiveItem","isOrContainsNode","isSamsung","getPropGetters","_ref","props","refresh","store","setters","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","rest","onMouseDownOrTouchStart","event","isAutocompleteInteraction","getState","isOpen","pendingRequests","isEmpty","isTargetWithinAutocomplete","some","contextNode","dispatch","debug","cancelAll","onTouchStart","onMouseDown","onTouchMove","environment","document","activeElement","blur","getRootProps","role","concat","id","undefined","getFormProps","action","noValidate","onSubmit","_providedProps$inputE","preventDefault","state","onReset","_providedProps$inputE2","focus","getInputProps","_props$environment$na","onFocus","openOnFocus","Boolean","query","completion","_ref2","_ref2$maxLength","maxLength","activeItem","userAgent","navigator","shouldFallbackKeyHint","enterKeyHint","itemUrl","activeItemId","autoComplete","autoCorrect","autoCapitalize","spellCheck","autoFocus","placeholder","type","onChange","currentTarget","slice","onBlur","onClick","getAutocompleteId","instanceId","sourceId","getLabelProps","_ref3","sourceIndex","htmlFor","getListProps","_ref4","getPanelProps","onMouseLeave","getItemProps","item","__autocomplete_id","onMouseMove","_item","itemInputValue","_source","onActive","getItemInputValue","getItemUrl","runPreCommand","Promise","resolve","nextState","then","onSelect"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/node_modules/@algolia/autocomplete-core/dist/esm/getPropGetters.js"],"sourcesContent":["var _excluded = [\"props\", \"refresh\", \"store\"],\n    _excluded2 = [\"inputElement\", \"formElement\", \"panelElement\"],\n    _excluded3 = [\"inputElement\"],\n    _excluded4 = [\"inputElement\", \"maxLength\"],\n    _excluded5 = [\"sourceIndex\"],\n    _excluded6 = [\"sourceIndex\"],\n    _excluded7 = [\"item\", \"source\", \"sourceIndex\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { noop } from '@algolia/autocomplete-shared';\nimport { onInput } from './onInput';\nimport { onKeyDown as _onKeyDown } from './onKeyDown';\nimport { getActiveItem, isOrContainsNode, isSamsung } from './utils';\nexport function getPropGetters(_ref) {\n  var props = _ref.props,\n      refresh = _ref.refresh,\n      store = _ref.store,\n      setters = _objectWithoutProperties(_ref, _excluded);\n\n  var getEnvironmentProps = function getEnvironmentProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        formElement = providedProps.formElement,\n        panelElement = providedProps.panelElement,\n        rest = _objectWithoutProperties(providedProps, _excluded2);\n\n    function onMouseDownOrTouchStart(event) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      var isAutocompleteInteraction = store.getState().isOpen || !store.pendingRequests.isEmpty();\n\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      } // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n\n\n      var isTargetWithinAutocomplete = [formElement, panelElement].some(function (contextNode) {\n        return isOrContainsNode(contextNode, event.target);\n      });\n\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null); // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n\n    return _objectSpread({\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove: function onTouchMove(event) {\n        if (store.getState().isOpen === false || inputElement !== props.environment.document.activeElement || event.target === inputElement) {\n          return;\n        }\n\n        inputElement.blur();\n      }\n    }, rest);\n  };\n\n  var getRootProps = function getRootProps(rest) {\n    return _objectSpread({\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\")\n    }, rest);\n  };\n\n  var getFormProps = function getFormProps(providedProps) {\n    var inputElement = providedProps.inputElement,\n        rest = _objectWithoutProperties(providedProps, _excluded3);\n\n    return _objectSpread({\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: function onSubmit(event) {\n        var _providedProps$inputE;\n\n        event.preventDefault();\n        props.onSubmit(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('submit', null);\n        (_providedProps$inputE = providedProps.inputElement) === null || _providedProps$inputE === void 0 ? void 0 : _providedProps$inputE.blur();\n      },\n      onReset: function onReset(event) {\n        var _providedProps$inputE2;\n\n        event.preventDefault();\n        props.onReset(_objectSpread({\n          event: event,\n          refresh: refresh,\n          state: store.getState()\n        }, setters));\n        store.dispatch('reset', null);\n        (_providedProps$inputE2 = providedProps.inputElement) === null || _providedProps$inputE2 === void 0 ? void 0 : _providedProps$inputE2.focus();\n      }\n    }, rest);\n  };\n\n  var getInputProps = function getInputProps(providedProps) {\n    var _props$environment$na;\n\n    function onFocus(event) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: store.getState().completion || store.getState().query,\n          refresh: refresh,\n          store: store\n        }, setters));\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    var _ref2 = providedProps || {},\n        inputElement = _ref2.inputElement,\n        _ref2$maxLength = _ref2.maxLength,\n        maxLength = _ref2$maxLength === void 0 ? 512 : _ref2$maxLength,\n        rest = _objectWithoutProperties(_ref2, _excluded4);\n\n    var activeItem = getActiveItem(store.getState());\n    var userAgent = ((_props$environment$na = props.environment.navigator) === null || _props$environment$na === void 0 ? void 0 : _props$environment$na.userAgent) || '';\n    var shouldFallbackKeyHint = isSamsung(userAgent);\n    var enterKeyHint = activeItem !== null && activeItem !== void 0 && activeItem.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search';\n    return _objectSpread({\n      'aria-autocomplete': 'both',\n      'aria-activedescendant': store.getState().isOpen && store.getState().activeItemId !== null ? \"\".concat(props.id, \"-item-\").concat(store.getState().activeItemId) : undefined,\n      'aria-controls': store.getState().isOpen ? \"\".concat(props.id, \"-list\") : undefined,\n      'aria-labelledby': \"\".concat(props.id, \"-label\"),\n      value: store.getState().completion || store.getState().query,\n      id: \"\".concat(props.id, \"-input\"),\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength: maxLength,\n      type: 'search',\n      onChange: function onChange(event) {\n        onInput(_objectSpread({\n          event: event,\n          props: props,\n          query: event.currentTarget.value.slice(0, maxLength),\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onKeyDown: function onKeyDown(event) {\n        _onKeyDown(_objectSpread({\n          event: event,\n          props: props,\n          refresh: refresh,\n          store: store\n        }, setters));\n      },\n      onFocus: onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: function onClick(event) {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (providedProps.inputElement === props.environment.document.activeElement && !store.getState().isOpen) {\n          onFocus(event);\n        }\n      }\n    }, rest);\n  };\n\n  var getAutocompleteId = function getAutocompleteId(instanceId, sourceId) {\n    return typeof sourceId !== 'undefined' ? \"\".concat(instanceId, \"-\").concat(sourceId) : instanceId;\n  };\n\n  var getLabelProps = function getLabelProps(providedProps) {\n    var _ref3 = providedProps || {},\n        sourceIndex = _ref3.sourceIndex,\n        rest = _objectWithoutProperties(_ref3, _excluded5);\n\n    return _objectSpread({\n      htmlFor: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-input\"),\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\")\n    }, rest);\n  };\n\n  var getListProps = function getListProps(providedProps) {\n    var _ref4 = providedProps || {},\n        sourceIndex = _ref4.sourceIndex,\n        rest = _objectWithoutProperties(_ref4, _excluded6);\n\n    return _objectSpread({\n      role: 'listbox',\n      'aria-labelledby': \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-label\"),\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-list\")\n    }, rest);\n  };\n\n  var getPanelProps = function getPanelProps(rest) {\n    return _objectSpread({\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        event.preventDefault();\n      },\n      onMouseLeave: function onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      }\n    }, rest);\n  };\n\n  var getItemProps = function getItemProps(providedProps) {\n    var item = providedProps.item,\n        source = providedProps.source,\n        sourceIndex = providedProps.sourceIndex,\n        rest = _objectWithoutProperties(providedProps, _excluded7);\n\n    return _objectSpread({\n      id: \"\".concat(getAutocompleteId(props.id, sourceIndex), \"-item-\").concat(item.__autocomplete_id),\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove: function onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n        var activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          var _item = activeItem.item,\n              itemInputValue = activeItem.itemInputValue,\n              itemUrl = activeItem.itemUrl,\n              _source = activeItem.source;\n\n          _source.onActive(_objectSpread({\n            event: event,\n            item: _item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: _source,\n            state: store.getState()\n          }, setters));\n        }\n      },\n      onMouseDown: function onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        event.preventDefault();\n      },\n      onClick: function onClick(event) {\n        var itemInputValue = source.getItemInputValue({\n          item: item,\n          state: store.getState()\n        });\n        var itemUrl = source.getItemUrl({\n          item: item,\n          state: store.getState()\n        }); // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n\n        var runPreCommand = itemUrl ? Promise.resolve() : onInput(_objectSpread({\n          event: event,\n          nextState: {\n            isOpen: false\n          },\n          props: props,\n          query: itemInputValue,\n          refresh: refresh,\n          store: store\n        }, setters));\n        runPreCommand.then(function () {\n          source.onSelect(_objectSpread({\n            event: event,\n            item: item,\n            itemInputValue: itemInputValue,\n            itemUrl: itemUrl,\n            refresh: refresh,\n            source: source,\n            state: store.getState()\n          }, setters));\n        });\n      }\n    }, rest);\n  };\n\n  return {\n    getEnvironmentProps: getEnvironmentProps,\n    getRootProps: getRootProps,\n    getFormProps: getFormProps,\n    getLabelProps: getLabelProps,\n    getInputProps: getInputProps,\n    getPanelProps: getPanelProps,\n    getListProps: getListProps,\n    getItemProps: getItemProps\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}