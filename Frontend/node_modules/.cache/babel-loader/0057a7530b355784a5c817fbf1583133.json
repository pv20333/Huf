{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\parametros-padrao\\\\parametros-form\\\\PPdetalhes\\\\detalhes.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Table, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableCell = _ref => {\n  let {\n    editing,\n    dataIndex,\n    title,\n    record,\n    index,\n    children,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Input, {\n      value: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n_c = EditableCell;\nconst Detalhes = () => {\n  _s();\n  const {\n    n_ParametroPadrao\n  } = useParams();\n  const [parametroPadrao, setParametroPadrao] = useState(null);\n  const [n_Estados, setNEstados] = useState(null);\n  const [editingKey, setEditingKey] = useState('');\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadraoDetalhado/${n_ParametroPadrao}`, {\n          cancelToken: source.token\n        });\n        setParametroPadrao(response.data);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.log('Solicitação cancelada', error.message);\n        } else {\n          console.error(\"Erro ao buscar detalhes do ParametroPadrao: \", error);\n        }\n      }\n    };\n    fetchData();\n    return () => {\n      source.cancel();\n    };\n  }, [n_ParametroPadrao]);\n  useEffect(() => {\n    const source = axios.CancelToken.source();\n    const fetchNEstados = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadrao/${n_ParametroPadrao}`, {\n          cancelToken: source.token\n        });\n        setNEstados(response.data.Historico_Estados[0].n_Estados);\n      } catch (error) {\n        if (axios.isCancel(error)) {\n          console.log('Solicitação cancelada', error.message);\n        } else {\n          console.error(\"Erro ao buscar n_Estados: \", error);\n        }\n      }\n    };\n    fetchNEstados();\n    return () => {\n      source.cancel();\n    };\n  }, [n_ParametroPadrao]);\n  let tabelas = {};\n  if (parametroPadrao) {\n    for (const resposta of parametroPadrao.TabelaRespostas) {\n      const idTabela = resposta.TabelaColuna.n_TabelaGeral;\n      if (!tabelas[idTabela]) {\n        tabelas[idTabela] = {\n          designacao: resposta.TabelaColuna.TabelaGeral.designacao,\n          numero_linhas: resposta.TabelaColuna.TabelaGeral.numero_linhas,\n          colunas: new Set(),\n          linhas: Array(resposta.TabelaColuna.TabelaGeral.numero_linhas).fill().map((_, i) => ({\n            key: i + 1\n          }))\n        };\n      }\n      tabelas[idTabela].colunas.add(resposta.TabelaColuna.TituloColunas);\n\n      // Procuramos a primeira linha disponível onde a coluna ainda não está preenchida\n      const linha = tabelas[idTabela].linhas.find(linha => !linha[resposta.TabelaColuna.TituloColunas]);\n      if (linha) {\n        // Adicionamos a resposta na coluna da linha encontrada\n        linha[resposta.TabelaColuna.TituloColunas] = {\n          editing: false,\n          value: resposta.respostas\n        };\n      }\n    }\n  }\n  console.log(tabelas);\n  const handleClickDeviated = async () => {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/renderizarpp/parametroPadraoDeviated/${n_ParametroPadrao}`);\n      console.log(response.data);\n      setNEstados(9);\n    } catch (error) {\n      console.error(\"Erro ao alterar o estado: \", error);\n    }\n  };\n  const handleClickDeviatedtoSaved = async () => {\n    try {\n      const response = await axios.put(`http://localhost:8080/api/renderizarpp/parametroPadraoDeviatedtoSaved/${n_ParametroPadrao}`);\n      console.log(response.data);\n      setNEstados(3);\n    } catch (error) {\n      console.error(\"Erro ao alterar o estado: \", error);\n    }\n  };\n  const renderButtons = n_Estados => {\n    switch (n_Estados) {\n      case 3:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Submited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: handleClickDeviated,\n            children: \"Deviated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Activated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 9:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: handleClickDeviatedtoSaved,\n            children: \"Return to saved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  const handleSave = async (record, column) => {\n    const {\n      n_ParametroPadrao,\n      n_TabelaColunas,\n      respostas\n    } = record[column];\n    try {\n      const response = await axios.put(`http://localhost:8080/api/updateRespostas/${n_ParametroPadrao}`, {\n        n_TabelaColunas,\n        respostas: respostas.value\n      });\n      console.log('Resposta atualizada:', response.data);\n    } catch (error) {\n      console.error(\"Erro ao atualizar resposta: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parametroPadrao ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Detalhes para o parametro padrao: \", n_ParametroPadrao, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Descri\\xE7\\xE3o: \", parametroPadrao.descricao]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Estados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), Object.entries(tabelas).map(_ref2 => {\n        let [key, tabela] = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tabela.designacao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            components: {\n              body: {\n                cell: EditableCell\n              }\n            },\n            columns: Array.from(tabela.colunas).map(coluna => ({\n              title: coluna,\n              dataIndex: coluna,\n              key: coluna,\n              render: (text, record) => {\n                const editable = isEditing(record);\n                return editable ? /*#__PURE__*/_jsxDEV(Input, {\n                  value: text.value,\n                  onChange: e => record[coluna].value = e.target.value,\n                  onBlur: () => handleSave(record, coluna)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this) : text.value;\n              },\n              editable: true\n            })),\n            dataSource: tabela.linhas,\n            pagination: false,\n            rowClassName: \"editable-row\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"n_Formulario: \", parametroPadrao.n_Formularios]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"n_VersaoFormulario: \", parametroPadrao.n_VersaoFormulario]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), renderButtons(n_Estados)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A carregar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Detalhes, \"BksMara8E5luTRIryW9UaAB6Hag=\", false, function () {\n  return [useParams];\n});\n_c2 = Detalhes;\nexport default Detalhes;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"Detalhes\");","map":{"version":3,"names":["useEffect","useState","useParams","axios","Table","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","EditableCell","_ref","editing","dataIndex","title","record","index","children","restProps","Input","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Detalhes","_s","n_ParametroPadrao","parametroPadrao","setParametroPadrao","n_Estados","setNEstados","editingKey","setEditingKey","source","CancelToken","fetchData","response","get","cancelToken","token","data","error","isCancel","console","log","message","cancel","fetchNEstados","Historico_Estados","tabelas","resposta","TabelaRespostas","idTabela","TabelaColuna","n_TabelaGeral","designacao","TabelaGeral","numero_linhas","colunas","Set","linhas","Array","fill","map","_","i","key","add","TituloColunas","linha","find","respostas","handleClickDeviated","put","handleClickDeviatedtoSaved","renderButtons","type","onClick","handleSave","column","n_TabelaColunas","descricao","Object","entries","_ref2","tabela","components","body","cell","columns","from","coluna","render","text","editable","isEditing","onChange","e","target","onBlur","dataSource","pagination","rowClassName","n_Formularios","n_VersaoFormulario","_c2","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/parametros-padrao/parametros-form/PPdetalhes/detalhes.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Table, Button } from 'antd';\r\n\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => (\r\n  <td {...restProps}>\r\n    {editing ? (\r\n      <Input value={children} />\r\n    ) : (\r\n      children\r\n    )}\r\n  </td>\r\n);\r\n\r\nconst Detalhes = () => {\r\n  const { n_ParametroPadrao } = useParams();\r\n  const [parametroPadrao, setParametroPadrao] = useState(null);\r\n  const [n_Estados, setNEstados] = useState(null);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadraoDetalhado/${n_ParametroPadrao}`, { cancelToken: source.token });\r\n        setParametroPadrao(response.data);\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          console.log('Solicitação cancelada', error.message);\r\n        } else {\r\n          console.error(\"Erro ao buscar detalhes do ParametroPadrao: \", error);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [n_ParametroPadrao]);\r\n\r\n  useEffect(() => {\r\n    const source = axios.CancelToken.source();\r\n\r\n    const fetchNEstados = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadrao/${n_ParametroPadrao}`, { cancelToken: source.token });\r\n        setNEstados(response.data.Historico_Estados[0].n_Estados);\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          console.log('Solicitação cancelada', error.message);\r\n        } else {\r\n          console.error(\"Erro ao buscar n_Estados: \", error);\r\n        }\r\n      }\r\n    };\r\n    fetchNEstados();\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [n_ParametroPadrao]);\r\n\r\n  let tabelas = {};\r\n\r\n  if (parametroPadrao) {\r\n    for (const resposta of parametroPadrao.TabelaRespostas) {\r\n      const idTabela = resposta.TabelaColuna.n_TabelaGeral;\r\n      \r\n      if (!tabelas[idTabela]) {\r\n        tabelas[idTabela] = {\r\n          designacao: resposta.TabelaColuna.TabelaGeral.designacao,\r\n          numero_linhas: resposta.TabelaColuna.TabelaGeral.numero_linhas,\r\n          colunas: new Set(),\r\n          linhas: Array(resposta.TabelaColuna.TabelaGeral.numero_linhas).fill().map((_, i) => ({ key: i + 1 })),\r\n        };\r\n      }\r\n  \r\n      tabelas[idTabela].colunas.add(resposta.TabelaColuna.TituloColunas);\r\n      \r\n      // Procuramos a primeira linha disponível onde a coluna ainda não está preenchida\r\n      const linha = tabelas[idTabela].linhas.find(linha => !linha[resposta.TabelaColuna.TituloColunas]);\r\n  \r\n      if (linha) {\r\n        // Adicionamos a resposta na coluna da linha encontrada\r\n        linha[resposta.TabelaColuna.TituloColunas] = {\r\n          editing: false,\r\n          value: resposta.respostas,\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  console.log(tabelas);\r\n\r\n  const handleClickDeviated = async () => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:8080/api/renderizarpp/parametroPadraoDeviated/${n_ParametroPadrao}`);\r\n      console.log(response.data);\r\n      setNEstados(9);\r\n    } catch (error) {\r\n      console.error(\"Erro ao alterar o estado: \", error);\r\n    }\r\n};\r\n\r\nconst handleClickDeviatedtoSaved = async () => {\r\n  try {\r\n    const response = await axios.put(`http://localhost:8080/api/renderizarpp/parametroPadraoDeviatedtoSaved/${n_ParametroPadrao}`);\r\n    console.log(response.data);\r\n    setNEstados(3);\r\n  } catch (error) {\r\n    console.error(\"Erro ao alterar o estado: \", error);\r\n  }\r\n};\r\n\r\n  const renderButtons = (n_Estados) => {\r\n    switch (n_Estados) {\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Button type=\"primary\">Submited</Button>\r\n            <Button>Cancel</Button>\r\n          </>\r\n        );\r\n      case 4:\r\n        return (\r\n          <>\r\n            <Button type=\"primary\" onClick={handleClickDeviated}>\r\n              Deviated\r\n            </Button>\r\n            <Button>Activated</Button>\r\n          </>\r\n        );\r\n      case 9:\r\n        return (\r\n          <>\r\n            <Button type=\"primary\" onClick={handleClickDeviatedtoSaved}>Return to saved</Button>\r\n            <Button>Reject</Button>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleSave = async (record, column) => {\r\n    const { n_ParametroPadrao, n_TabelaColunas, respostas } = record[column];\r\n  \r\n    try {\r\n      const response = await axios.put(`http://localhost:8080/api/updateRespostas/${n_ParametroPadrao}`, {\r\n        n_TabelaColunas,\r\n        respostas: respostas.value,\r\n      });\r\n      \r\n      console.log('Resposta atualizada:', response.data);\r\n    } catch (error) {\r\n      console.error(\"Erro ao atualizar resposta: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {parametroPadrao ? (\r\n        <>\r\n          Detalhes para o parametro padrao: {n_ParametroPadrao}\r\n          <p>Descrição: {parametroPadrao.descricao}</p>\r\n          <p>Estados:</p>\r\n          {Object.entries(tabelas).map(([key, tabela]) => (\r\n            <div key={key}>\r\n              <h2>{tabela.designacao}</h2>\r\n              <Table\r\n                components={{\r\n                  body: {\r\n                    cell: EditableCell,\r\n                  },\r\n                }}\r\n                columns={Array.from(tabela.colunas).map((coluna) => ({\r\n                  title: coluna,\r\n                  dataIndex: coluna,\r\n                  key: coluna,\r\n                  render: (text, record) => {\r\n                    const editable = isEditing(record);\r\n                    return editable ? (\r\n                      <Input\r\n                        value={text.value}\r\n                        onChange={(e) =>\r\n                          (record[coluna].value = e.target.value)}\r\n                          onBlur={() => handleSave(record, coluna)}\r\n                      />\r\n                    ) : (\r\n                      text.value\r\n                    );\r\n                  },\r\n                  editable: true,\r\n                }))}\r\n                dataSource={tabela.linhas}\r\n                pagination={false}\r\n                rowClassName=\"editable-row\"\r\n              />\r\n            </div>\r\n          ))}\r\n          <p>n_Formulario: {parametroPadrao.n_Formularios}</p>\r\n          <p>n_VersaoFormulario: {parametroPadrao.n_VersaoFormulario}</p>\r\n          {renderButtons(n_Estados)}\r\n        </>\r\n      ) : (\r\n        <p>A carregar...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detalhes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}