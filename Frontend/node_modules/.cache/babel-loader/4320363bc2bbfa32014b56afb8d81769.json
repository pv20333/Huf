{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\preencher-PP\\\\tabelaMP.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'ID',\n  dataIndex: 'n_MateriaPrima' // Supondo que é esse o nome correto, ajuste conforme necessário\n}, {\n  title: 'Matéria-Prima',\n  dataIndex: 'Descricao' // Supondo que é esse o nome correto, ajuste conforme necessário\n}];\n\nconst App = () => {\n  _s();\n  const [materiaPrimaData, setMateriaPrimaData] = useState([]);\n  useEffect(() => {\n    // Pegar o ID da matéria-prima da URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const materiaPrimaId = urlParams.get('materiaPrima');\n    if (materiaPrimaId) {\n      // Fazer a requisição para o servidor usando o ID da matéria-prima\n      axios.get(`http://localhost:8080/api/listarppForm/details/materiaPrima?materiaPrima=${materiaPrimaId}`).then(response => {\n        if (typeof response.data === \"object\" && response.data !== null) {\n          const materiaPrimaInfo = response.data;\n          materiaPrimaInfo.key = materiaPrimaInfo.n_MateriaPrima;\n          setMateriaPrimaData([materiaPrimaInfo]);\n        } else {\n          console.error(\"Data recebida não é um objeto:\", response.data);\n        }\n      }).catch(error => {\n        console.log(\"Erro na solicitação:\", error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: materiaPrimaData,\n    size: \"small\",\n    pagination: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Fx0HdKVUrMUEcY0SEGM1s6XNjfg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","columns","title","dataIndex","App","_s","materiaPrimaData","setMateriaPrimaData","urlParams","URLSearchParams","window","location","search","materiaPrimaId","get","then","response","data","materiaPrimaInfo","key","n_MateriaPrima","console","error","catch","log","dataSource","size","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/preencher-PP/tabelaMP.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'ID',\r\n    dataIndex: 'n_MateriaPrima',  // Supondo que é esse o nome correto, ajuste conforme necessário\r\n  },\r\n  {\r\n    title: 'Matéria-Prima',\r\n    dataIndex: 'Descricao',  // Supondo que é esse o nome correto, ajuste conforme necessário\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [materiaPrimaData, setMateriaPrimaData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Pegar o ID da matéria-prima da URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const materiaPrimaId = urlParams.get('materiaPrima');\r\n\r\n    if (materiaPrimaId) {\r\n      // Fazer a requisição para o servidor usando o ID da matéria-prima\r\n      axios.get(`http://localhost:8080/api/listarppForm/details/materiaPrima?materiaPrima=${materiaPrimaId}`)\r\n        .then(response => {\r\n          if (typeof response.data === \"object\" && response.data !== null) {\r\n            const materiaPrimaInfo = response.data;\r\n            materiaPrimaInfo.key = materiaPrimaInfo.n_MateriaPrima;\r\n            setMateriaPrimaData([materiaPrimaInfo]);\r\n          } else {\r\n            console.error(\"Data recebida não é um objeto:\", response.data);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Erro na solicitação:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={materiaPrimaData} size=\"small\" pagination={false} />\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,gBAAgB,CAAG;AAChC,CAAC,EACD;EACED,KAAK,EAAE,eAAe;EACtBC,SAAS,EAAE,WAAW,CAAG;AAC3B,CAAC,CACF;;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,cAAc,GAAGL,SAAS,CAACM,GAAG,CAAC,cAAc,CAAC;IAEpD,IAAID,cAAc,EAAE;MAClB;MACAf,KAAK,CAACgB,GAAG,CAAE,4EAA2ED,cAAe,EAAC,CAAC,CACpGE,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAI,OAAOA,QAAQ,CAACC,IAAI,KAAK,QAAQ,IAAID,QAAQ,CAACC,IAAI,KAAK,IAAI,EAAE;UAC/D,MAAMC,gBAAgB,GAAGF,QAAQ,CAACC,IAAI;UACtCC,gBAAgB,CAACC,GAAG,GAAGD,gBAAgB,CAACE,cAAc;UACtDb,mBAAmB,CAAC,CAACW,gBAAgB,CAAC,CAAC;QACzC,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEN,QAAQ,CAACC,IAAI,CAAC;QAChE;MACF,CAAC,CAAC,CACDM,KAAK,CAACD,KAAK,IAAI;QACdD,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAEF,KAAK,CAAC;MAC5C,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA,CAACH,KAAK;IAACI,OAAO,EAAEA,OAAQ;IAACwB,UAAU,EAAEnB,gBAAiB;IAACoB,IAAI,EAAC,OAAO;IAACC,UAAU,EAAE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAE7F,CAAC;AAAC1B,EAAA,CA7BID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}