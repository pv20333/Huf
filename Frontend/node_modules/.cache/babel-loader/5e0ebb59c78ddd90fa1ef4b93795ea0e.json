{"ast":null,"code":"const parseJwt = token => {\n  try {\n    return JSON.parse(atob(token.split(\".\")[1]));\n  } catch (e) {\n    return null;\n  }\n};\nexport const isExpired = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const decodedJwt = parseJwt(token);\n    if (decodedJwt.exp * 1000 < Date.now()) {\n      history.push('/login');\n    }\n  }\n};\nexport const isExpiredBoolean = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      const decodedJwt = parseJwt(token);\n      if (decodedJwt.exp * 1000 < Date.now()) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n};\nexport const isNotExpiredBoolean = () => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    try {\n      const decodedJwt = parseJwt(token);\n      if (decodedJwt.exp * 1000 >= Date.now()) {\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n  return false;\n};\nexport const isNotExpired = () => {\n  const token = localStorage.getItem('token');\n  console.log(token);\n  if (token) {\n    try {\n      const decodedJwt = parseJwt(token);\n      if (decodedJwt.exp * 1000 >= Date.now()) {\n        console.log(\"Not expired\");\n        //history.push('/dashboard');\n      }\n    } catch (e) {}\n  }\n};","map":{"version":3,"names":["parseJwt","token","JSON","parse","atob","split","e","isExpired","localStorage","getItem","decodedJwt","exp","Date","now","history","push","isExpiredBoolean","isNotExpiredBoolean","isNotExpired","console","log"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/login/token.jsx"],"sourcesContent":["const parseJwt = (token) => {\r\n    try {\r\n      return JSON.parse(atob(token.split(\".\")[1]));\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n};\r\n\r\nexport const isExpired = () => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const decodedJwt = parseJwt(token);\r\n            if (decodedJwt.exp * 1000 < Date.now()) {\r\n                history.push('/login');\r\n            }\r\n       }\r\n    \r\n\r\n}\r\n\r\nexport const isExpiredBoolean = () => {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n        try{\r\n            const decodedJwt = parseJwt(token);\r\n            if (decodedJwt.exp * 1000 < Date.now()) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }catch(e){\r\n            return false;\r\n        }\r\n   }\r\n   return false;\r\n}\r\n\r\nexport const isNotExpiredBoolean = () => {\r\n    const token = localStorage.getItem('token');\r\n    if(token){\r\n        try{\r\n            const decodedJwt = parseJwt(token);\r\n            if (decodedJwt.exp * 1000 >= Date.now()) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }catch(e){\r\n            return false;\r\n        }\r\n   }\r\n   return false;\r\n}\r\n\r\nexport const isNotExpired = () => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(token)\r\n        if(token){\r\n             try{\r\n                const decodedJwt = parseJwt(token);\r\n                if (decodedJwt.exp * 1000 >= Date.now()) {\r\n                    console.log(\"Not expired\")\r\n                      //history.push('/dashboard');\r\n                 }\r\n             }catch(e){\r\n                \r\n             }\r\n    \r\n       }\r\n    \r\n\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EACxB,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,OAAO,IAAI;EACb;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACvB,MAAMN,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGR,KAAK,EAAC;IACL,MAAMS,UAAU,GAAGV,QAAQ,CAACC,KAAK,CAAC;IAClC,IAAIS,UAAU,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,EAAE;MACpCC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC1B;EACL;AAGP,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAClC,MAAMf,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGR,KAAK,EAAC;IACL,IAAG;MACC,MAAMS,UAAU,GAAGV,QAAQ,CAACC,KAAK,CAAC;MAClC,IAAIS,UAAU,CAACC,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,EAAE;QACpC,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB,CAAC,QAAMP,CAAC,EAAC;MACL,OAAO,KAAK;IAChB;EACL;EACA,OAAO,KAAK;AACf,CAAC;AAED,OAAO,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;EACrC,MAAMhB,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAGR,KAAK,EAAC;IACL,IAAG;MACC,MAAMS,UAAU,GAAGV,QAAQ,CAACC,KAAK,CAAC;MAClC,IAAIS,UAAU,CAACC,GAAG,GAAG,IAAI,IAAIC,IAAI,CAACC,GAAG,EAAE,EAAE;QACrC,OAAO,IAAI;MACf;MACA,OAAO,KAAK;IAChB,CAAC,QAAMP,CAAC,EAAC;MACL,OAAO,KAAK;IAChB;EACL;EACA,OAAO,KAAK;AACf,CAAC;AAED,OAAO,MAAMY,YAAY,GAAGA,CAAA,KAAM;EAC1B,MAAMjB,KAAK,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CU,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;EAClB,IAAGA,KAAK,EAAC;IACJ,IAAG;MACA,MAAMS,UAAU,GAAGV,QAAQ,CAACC,KAAK,CAAC;MAClC,IAAIS,UAAU,CAACC,GAAG,GAAG,IAAI,IAAIC,IAAI,CAACC,GAAG,EAAE,EAAE;QACrCM,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;QACxB;MACL;IACJ,CAAC,QAAMd,CAAC,EAAC,CAET;EAEN;AAGP,CAAC"},"metadata":{},"sourceType":"module"}