{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\parametros-padrao\\\\parametros-form\\\\criar-parametros-form\\\\criarform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicTable = () => {\n  _s();\n  const [columns, setColumns] = useState([{\n    title: 'Velocidade',\n    dataIndex: 'velocidade',\n    key: 'velocidade',\n    children: [{\n      title: 'Campo 1',\n      dataIndex: 'campo1',\n      key: 'campo1'\n    }, {\n      title: 'Campo 2',\n      dataIndex: 'campo2',\n      key: 'campo2'\n    }]\n  }, {\n    title: 'Lim. Pressao',\n    dataIndex: 'limPressao',\n    key: 'limPressao',\n    children: [{\n      title: 'Campo 1',\n      dataIndex: 'campo1',\n      key: 'campo1'\n    }, {\n      title: 'Campo 2',\n      dataIndex: 'campo2',\n      key: 'campo2'\n    }]\n  }, {\n    title: 'Tolerancia',\n    dataIndex: 'tolerancia',\n    key: 'tolerancia'\n  }]);\n  const [data, setData] = useState([{\n    key: 0,\n    velocidade: {\n      campo1: '',\n      campo2: ''\n    },\n    limPressao: {\n      campo1: '',\n      campo2: ''\n    },\n    tolerancia: ''\n  }, {\n    key: 1,\n    velocidade: {\n      campo1: '',\n      campo2: ''\n    },\n    limPressao: {\n      campo1: '',\n      campo2: ''\n    },\n    tolerancia: ''\n  }]);\n  const handleAddColumn = () => {\n    const newColumn = {\n      title: `Nova Coluna ${columns.length + 1}`,\n      dataIndex: `novaColuna${columns.length + 1}`,\n      key: `novaColuna${columns.length + 1}`\n    };\n    setColumns([...columns, newColumn]);\n  };\n  const handleAddRow = () => {\n    const newRow = {\n      key: data.length,\n      velocidade: {\n        campo1: '',\n        campo2: ''\n      },\n      limPressao: {\n        campo1: '',\n        campo2: ''\n      },\n      tolerancia: ''\n    };\n    setData([...data, newRow]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddColumn,\n      children: \"Adicionar Coluna\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Adicionar Linha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicTable, \"EgvOt7FVXvIET+7FKqVnIBHkmc8=\");\n_c = DynamicTable;\nexport default DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","useState","Table","jsxDEV","_jsxDEV","DynamicTable","_s","columns","setColumns","title","dataIndex","key","children","data","setData","velocidade","campo1","campo2","limPressao","tolerancia","handleAddColumn","newColumn","length","handleAddRow","newRow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/parametros-padrao/parametros-form/criar-parametros-form/criarform.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst DynamicTable = () => {\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      title: 'Velocidade',\r\n      dataIndex: 'velocidade',\r\n      key: 'velocidade',\r\n      children: [\r\n        {\r\n          title: 'Campo 1',\r\n          dataIndex: 'campo1',\r\n          key: 'campo1',\r\n        },\r\n        {\r\n          title: 'Campo 2',\r\n          dataIndex: 'campo2',\r\n          key: 'campo2',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Lim. Pressao',\r\n      dataIndex: 'limPressao',\r\n      key: 'limPressao',\r\n      children: [\r\n        {\r\n          title: 'Campo 1',\r\n          dataIndex: 'campo1',\r\n          key: 'campo1',\r\n        },\r\n        {\r\n          title: 'Campo 2',\r\n          dataIndex: 'campo2',\r\n          key: 'campo2',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: 'Tolerancia',\r\n      dataIndex: 'tolerancia',\r\n      key: 'tolerancia',\r\n    },\r\n  ]);\r\n\r\n  const [data, setData] = useState([\r\n    {\r\n      key: 0,\r\n      velocidade: { campo1: '', campo2: '' },\r\n      limPressao: { campo1: '', campo2: '' },\r\n      tolerancia: '',\r\n    },\r\n    {\r\n      key: 1,\r\n      velocidade: { campo1: '', campo2: '' },\r\n      limPressao: { campo1: '', campo2: '' },\r\n      tolerancia: '',\r\n    },\r\n  ]);\r\n\r\n  const handleAddColumn = () => {\r\n    const newColumn = {\r\n      title: `Nova Coluna ${columns.length + 1}`,\r\n      dataIndex: `novaColuna${columns.length + 1}`,\r\n      key: `novaColuna${columns.length + 1}`,\r\n    };\r\n    setColumns([...columns, newColumn]);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const newRow = {\r\n      key: data.length,\r\n      velocidade: { campo1: '', campo2: '' },\r\n      limPressao: { campo1: '', campo2: '' },\r\n      tolerancia: '',\r\n    };\r\n    setData([...data, newRow]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleAddColumn}>Adicionar Coluna</button>\r\n      <button onClick={handleAddRow}>Adicionar Linha</button>\r\n      <Table columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;"],"mappings":"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"},"metadata":{},"sourceType":"module"}