{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\parametros-padrao\\\\parametros-form\\\\PPdetalhes\\\\detalhes.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Table, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detalhes = () => {\n  _s();\n  const {\n    n_ParametroPadrao\n  } = useParams();\n  const [parametroPadrao, setParametroPadrao] = useState(null);\n  const [n_Estados, setNEstados] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadraoDetalhado/${n_ParametroPadrao}`);\n        setParametroPadrao(response.data);\n        console.log(\"Dados do ParametroPadrao recebidos: \", response.data);\n      } catch (error) {\n        console.error(\"Erro ao buscar detalhes do ParametroPadrao: \", error);\n      }\n    };\n    fetchData();\n  }, [n_ParametroPadrao]);\n  useEffect(() => {\n    const fetchNEstados = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadrao/${n_ParametroPadrao}`);\n        if (response.data.n_Estados && response.data.n_Estados.length > 0) {\n          setNEstados(response.data.n_Estados[0]);\n          console.log(\"n_Estados recebidos: \", response.data.n_Estados[0]);\n        } else {\n          console.log(\"n_Estados não definido ou vazio.\");\n        }\n      } catch (error) {\n        console.error(\"Erro ao buscar n_Estados: \", error);\n      }\n    };\n    fetchNEstados();\n  }, [n_ParametroPadrao]);\n  let tabelas = {};\n  if (parametroPadrao) {\n    for (const resposta of parametroPadrao.TabelaRespostas) {\n      const idTabela = resposta.TabelaColuna.n_TabelaGeral;\n      if (!tabelas[idTabela]) {\n        tabelas[idTabela] = {\n          designacao: resposta.TabelaColuna.TabelaGeral.designacao,\n          numero_linhas: resposta.TabelaColuna.TabelaGeral.numero_linhas,\n          colunas: new Set(),\n          linhas: []\n        };\n      }\n      tabelas[idTabela].colunas.add(resposta.TabelaColuna.TituloColunas);\n\n      // Assume que o número da linha está incluído no início da resposta\n      const linha = parseInt(resposta.respostas.match(/linha (\\d+)/)[1], 10);\n      if (!tabelas[idTabela].linhas[linha - 1]) {\n        tabelas[idTabela].linhas[linha - 1] = {\n          key: linha\n        };\n      }\n      tabelas[idTabela].linhas[linha - 1][resposta.TabelaColuna.TituloColunas] = resposta.respostas;\n    }\n  }\n  console.log(tabelas);\n  const renderButtons = n_Estados => {\n    console.log(\"Renderizando botões para o estado: \", n_Estados);\n    switch (n_Estados) {\n      case 3:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Submited\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Deviated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Activated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: parametroPadrao && n_Estados ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Detalhes para o parametro padrao: \", n_ParametroPadrao, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Descri\\xE7\\xE3o: \", parametroPadrao.descricao]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Estados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), Object.entries(tabelas).map(_ref => {\n        let [key, tabela] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tabela.designacao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            columns: Array.from(tabela.colunas).map(coluna => ({\n              title: coluna,\n              dataIndex: coluna,\n              key: coluna\n            })),\n            dataSource: tabela.linhas,\n            pagination: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"n_Formulario: \", parametroPadrao.n_Formularios]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"n_VersaoFormulario: \", parametroPadrao.n_VersaoFormularios]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), renderButtons(n_Estados)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A carregar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Detalhes, \"VBpNgbgXNtnwCxXU3nxtD5aftVc=\", false, function () {\n  return [useParams];\n});\n_c = Detalhes;\nexport default Detalhes;\nvar _c;\n$RefreshReg$(_c, \"Detalhes\");","map":{"version":3,"names":["useEffect","useState","useParams","axios","Table","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Detalhes","_s","n_ParametroPadrao","parametroPadrao","setParametroPadrao","n_Estados","setNEstados","fetchData","response","get","data","console","log","error","fetchNEstados","length","tabelas","resposta","TabelaRespostas","idTabela","TabelaColuna","n_TabelaGeral","designacao","TabelaGeral","numero_linhas","colunas","Set","linhas","add","TituloColunas","linha","parseInt","respostas","match","key","renderButtons","children","type","fileName","_jsxFileName","lineNumber","columnNumber","descricao","Object","entries","map","_ref","tabela","columns","Array","from","coluna","title","dataIndex","dataSource","pagination","n_Formularios","n_VersaoFormularios","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/parametros-padrao/parametros-form/PPdetalhes/detalhes.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Table, Button } from 'antd';\r\n\r\nconst Detalhes = () => {\r\n  const { n_ParametroPadrao } = useParams();\r\n  const [parametroPadrao, setParametroPadrao] = useState(null);\r\n  const [n_Estados, setNEstados] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadraoDetalhado/${n_ParametroPadrao}`);\r\n        setParametroPadrao(response.data);\r\n        console.log(\"Dados do ParametroPadrao recebidos: \", response.data);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar detalhes do ParametroPadrao: \", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [n_ParametroPadrao]);\r\n\r\n  useEffect(() => {\r\n    const fetchNEstados = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/renderizarpp/parametroPadrao/${n_ParametroPadrao}`);\r\n        if (response.data.n_Estados && response.data.n_Estados.length > 0) {\r\n          setNEstados(response.data.n_Estados[0]);\r\n          console.log(\"n_Estados recebidos: \", response.data.n_Estados[0]);\r\n        } else {\r\n          console.log(\"n_Estados não definido ou vazio.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar n_Estados: \", error);\r\n      }\r\n    };\r\n    fetchNEstados();\r\n  }, [n_ParametroPadrao]);\r\n\r\n\r\n  let tabelas = {};\r\n\r\n  if (parametroPadrao) {\r\n    for (const resposta of parametroPadrao.TabelaRespostas) {\r\n      const idTabela = resposta.TabelaColuna.n_TabelaGeral;\r\n      \r\n      if (!tabelas[idTabela]) {\r\n        tabelas[idTabela] = {\r\n          designacao: resposta.TabelaColuna.TabelaGeral.designacao,\r\n          numero_linhas: resposta.TabelaColuna.TabelaGeral.numero_linhas,\r\n          colunas: new Set(),\r\n          linhas: [],\r\n        };\r\n      }\r\n\r\n      tabelas[idTabela].colunas.add(resposta.TabelaColuna.TituloColunas);\r\n\r\n      // Assume que o número da linha está incluído no início da resposta\r\n      const linha = parseInt(resposta.respostas.match(/linha (\\d+)/)[1], 10);\r\n\r\n      if (!tabelas[idTabela].linhas[linha - 1]) {\r\n        tabelas[idTabela].linhas[linha - 1] = { key: linha };\r\n      }\r\n\r\n      tabelas[idTabela].linhas[linha - 1][resposta.TabelaColuna.TituloColunas] = resposta.respostas;\r\n    }\r\n  }\r\n\r\n  console.log(tabelas);\r\n\r\n  const renderButtons = (n_Estados) => {\r\n    console.log(\"Renderizando botões para o estado: \", n_Estados);\r\n    switch (n_Estados) {\r\n      case 3:\r\n        return (\r\n          <>\r\n            <Button type=\"primary\">Submited</Button>\r\n            <Button>Cancel</Button>\r\n          </>\r\n        );\r\n      case 4:\r\n        return (\r\n          <>\r\n            <Button type=\"primary\">Deviated</Button>\r\n            <Button>Activated</Button>\r\n          </>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {parametroPadrao && n_Estados ? (\r\n        <>\r\n          Detalhes para o parametro padrao: {n_ParametroPadrao}\r\n          <p>Descrição: {parametroPadrao.descricao}</p>\r\n          <p>Estados:</p>\r\n          {Object.entries(tabelas).map(([key, tabela]) => (\r\n            <div key={key}>\r\n              <h2>{tabela.designacao}</h2>\r\n              <Table\r\n                columns={Array.from(tabela.colunas).map((coluna) => ({\r\n                  title: coluna,\r\n                  dataIndex: coluna,\r\n                  key: coluna,\r\n                }))}\r\n                dataSource={tabela.linhas}\r\n                pagination={false}\r\n              />\r\n            </div>\r\n          ))}\r\n          <p>n_Formulario: {parametroPadrao.n_Formularios}</p>\r\n          <p>n_VersaoFormulario: {parametroPadrao.n_VersaoFormularios}</p>\r\n          {renderButtons(n_Estados)}\r\n        </>\r\n      ) : (\r\n        <p>A carregar...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detalhes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}