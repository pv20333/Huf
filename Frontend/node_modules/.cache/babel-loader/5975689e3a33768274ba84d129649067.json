{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class StringType extends MixedType {\n  constructor(errorMessage) {\n    super('string');\n    super.pushRule({\n      onValid: v => typeof v === 'string',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n  containsLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetter;\n    super.pushRule({\n      onValid: v => /[a-zA-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsUppercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsUppercaseLetter;\n    super.pushRule({\n      onValid: v => /[A-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsLowercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLowercaseLetter;\n    super.pushRule({\n      onValid: v => /[a-z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsLetterOnly() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetterOnly;\n    super.pushRule({\n      onValid: v => /^[a-zA-Z]+$/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsNumber() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsNumber;\n    super.pushRule({\n      onValid: v => /[0-9]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isOneOf(values) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.isOneOf;\n    super.pushRule({\n      onValid: v => !!~values.indexOf(v),\n      errorMessage,\n      params: {\n        values\n      }\n    });\n    return this;\n  }\n  isEmail() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isEmail;\n    // http://emailregex.com/\n    const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isURL() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isURL;\n    const regexp = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i');\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isHex() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isHex;\n    const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  pattern(regexp) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.pattern;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage,\n      params: {\n        regexp\n      }\n    });\n    return this;\n  }\n  rangeLength(minLength, maxLength) {\n    let errorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale.rangeLength;\n    super.pushRule({\n      onValid: value => value.length >= minLength && value.length <= maxLength,\n      errorMessage,\n      params: {\n        minLength,\n        maxLength\n      }\n    });\n    return this;\n  }\n  minLength(minLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.minLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length >= minLength,\n      errorMessage,\n      params: {\n        minLength\n      }\n    });\n    return this;\n  }\n  maxLength(maxLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.maxLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length <= maxLength,\n      errorMessage,\n      params: {\n        maxLength\n      }\n    });\n    return this;\n  }\n}\nexport default function getStringType(errorMessage) {\n  return new StringType(errorMessage);\n}","map":{"version":3,"sources":["../src/StringType.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nexport class StringType extends MixedType {\n    constructor(errorMessage) {\n        super('string');\n        super.pushRule({\n            onValid: v => typeof v === 'string',\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n    containsLetter(errorMessage = this.locale.containsLetter) {\n        super.pushRule({\n            onValid: v => /[a-zA-Z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsUppercaseLetter(errorMessage = this.locale.containsUppercaseLetter) {\n        super.pushRule({\n            onValid: v => /[A-Z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsLowercaseLetter(errorMessage = this.locale.containsLowercaseLetter) {\n        super.pushRule({\n            onValid: v => /[a-z]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsLetterOnly(errorMessage = this.locale.containsLetterOnly) {\n        super.pushRule({\n            onValid: v => /^[a-zA-Z]+$/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    containsNumber(errorMessage = this.locale.containsNumber) {\n        super.pushRule({\n            onValid: v => /[0-9]/.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isOneOf(values, errorMessage = this.locale.isOneOf) {\n        super.pushRule({\n            onValid: v => !!~values.indexOf(v),\n            errorMessage,\n            params: { values }\n        });\n        return this;\n    }\n    isEmail(errorMessage = this.locale.isEmail) {\n        // http://emailregex.com/\n        const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isURL(errorMessage = this.locale.isURL) {\n        const regexp = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i');\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    isHex(errorMessage = this.locale.isHex) {\n        const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage\n        });\n        return this;\n    }\n    pattern(regexp, errorMessage = this.locale.pattern) {\n        super.pushRule({\n            onValid: v => regexp.test(v),\n            errorMessage,\n            params: { regexp }\n        });\n        return this;\n    }\n    rangeLength(minLength, maxLength, errorMessage = this.locale.rangeLength) {\n        super.pushRule({\n            onValid: value => value.length >= minLength && value.length <= maxLength,\n            errorMessage,\n            params: { minLength, maxLength }\n        });\n        return this;\n    }\n    minLength(minLength, errorMessage = this.locale.minLength) {\n        super.pushRule({\n            onValid: value => Array.from(value).length >= minLength,\n            errorMessage,\n            params: { minLength }\n        });\n        return this;\n    }\n    maxLength(maxLength, errorMessage = this.locale.maxLength) {\n        super.pushRule({\n            onValid: value => Array.from(value).length <= maxLength,\n            errorMessage,\n            params: { maxLength }\n        });\n        return this;\n    }\n}\nexport default function getStringType(errorMessage) {\n    return new StringType(errorMessage);\n}\n//# sourceMappingURL=StringType.js.map"]},"metadata":{},"sourceType":"module"}