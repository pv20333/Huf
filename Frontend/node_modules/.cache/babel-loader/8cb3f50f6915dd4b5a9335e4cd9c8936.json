{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\preencher-PP\\\\tabelaMaquinass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'ID',\n  dataIndex: 'n_Maquina'\n}, {\n  title: 'Marca/Modelo',\n  dataIndex: 'MarcaModelo'\n}, {\n  title: 'ForcaFecho',\n  dataIndex: 'ForcaFecho'\n}, {\n  title: 'DiametroFuso',\n  dataIndex: 'DiametroFuso'\n}];\nconst App = () => {\n  _s();\n  const [machineData, setMachineData] = useState([mockData]);\n  const mockData = [{\n    n_Maquina: \"123\",\n    MarcaModelo: \"ModeloTeste\",\n    ForcaFecho: \"1234\",\n    DiametroFuso: \"5678\",\n    key: \"123\"\n  }];\n  useEffect(() => {\n    // Pegar o ID da máquina da URL\n    const urlParams = new URLSearchParams(window.location.search);\n    const machineId = urlParams.get('maquina');\n    if (machineId) {\n      // Fazer a requisição para o servidor usando o ID da máquina\n      axios.get(`http://localhost:8080/api/listarppForm/details/maquina?id=${machineId}`).then(response => {\n        console.log(\"Data:\", response.data);\n        if (typeof response.data === \"object\" && response.data !== null) {\n          const machineInfo = response.data;\n          machineInfo.key = machineInfo.n_Maquina;\n          setMachineData([machineInfo]);\n        } else {\n          console.error(\"Data recebida não é um objeto:\", response.data);\n        }\n      }).catch(error => {\n        console.log(\"Erro na solicitação:\", error);\n        if (error.response) {\n          // O pedido foi feito e o servidor respondeu com um status fora do intervalo de 2xx\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          // O pedido foi feito, mas nenhuma resposta foi recebida\n          console.log(error.request);\n        } else {\n          // Alguma coisa aconteceu na configuração da solicitação e gerou um erro\n          console.log('Error', error.message);\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: machineData,\n    size: \"small\",\n    pagination: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"824E3yBtbRSYY3Xfw2tiscBtLoE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","axios","jsxDEV","_jsxDEV","columns","title","dataIndex","App","_s","machineData","setMachineData","mockData","n_Maquina","MarcaModelo","ForcaFecho","DiametroFuso","key","urlParams","URLSearchParams","window","location","search","machineId","get","then","response","console","log","data","machineInfo","error","catch","status","headers","request","message","dataSource","size","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/preencher-PP/tabelaMaquinass.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'ID',\r\n    dataIndex: 'n_Maquina',\r\n  },\r\n  {\r\n    title: 'Marca/Modelo',\r\n    dataIndex: 'MarcaModelo',\r\n  },\r\n  {\r\n    title: 'ForcaFecho',\r\n    dataIndex: 'ForcaFecho',\r\n  },\r\n  {\r\n    title: 'DiametroFuso',\r\n    dataIndex: 'DiametroFuso',\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [machineData, setMachineData] = useState([mockData]);\r\n\r\n  const mockData = [{\r\n    n_Maquina: \"123\",\r\n    MarcaModelo: \"ModeloTeste\",\r\n    ForcaFecho: \"1234\",\r\n    DiametroFuso: \"5678\",\r\n    key: \"123\"\r\n  }];\r\n  \r\n\r\n  useEffect(() => {\r\n    // Pegar o ID da máquina da URL\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const machineId = urlParams.get('maquina');\r\n\r\n    if (machineId) {\r\n      // Fazer a requisição para o servidor usando o ID da máquina\r\n      axios.get(`http://localhost:8080/api/listarppForm/details/maquina?id=${machineId}`)\r\n        .then(response => {\r\n          console.log(\"Data:\", response.data);\r\n\r\n          if (typeof response.data === \"object\" && response.data !== null) {\r\n            const machineInfo = response.data;\r\n            machineInfo.key = machineInfo.n_Maquina;\r\n            setMachineData([machineInfo]);\r\n          } else {\r\n            console.error(\"Data recebida não é um objeto:\", response.data);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Erro na solicitação:\", error);\r\n          if (error.response) {\r\n              // O pedido foi feito e o servidor respondeu com um status fora do intervalo de 2xx\r\n              console.log(error.response.data);\r\n              console.log(error.response.status);\r\n              console.log(error.response.headers);\r\n          } else if (error.request) {\r\n              // O pedido foi feito, mas nenhuma resposta foi recebida\r\n              console.log(error.request);\r\n          } else {\r\n              // Alguma coisa aconteceu na configuração da solicitação e gerou um erro\r\n              console.log('Error', error.message);\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={machineData} size=\"small\" pagination={false} />\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}