{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class BooleanType extends MixedType {\n  constructor(errorMessage) {\n    super('boolean');\n    super.pushRule({\n      onValid: v => typeof v === 'boolean',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n}\nexport default function getBooleanType(errorMessage) {\n  return new BooleanType(errorMessage);\n}","map":{"version":3,"sources":["../src/BooleanType.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,aAAa;AAIvC,OAAM,MAAO,WAAkD,SAAQ,SAKtE,CAAA;EACC,WAAA,CAAY,YAAyB,EAAA;IACnC,KAAK,CAAC,SAAS,CAAC;IAChB,KAAK,CAAC,QAAQ,CAAC;MACb,OAAO,EAAE,CAAC,IAAI,OAAO,CAAC,KAAK,SAAS;MACpC,YAAY,EAAE,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC;KAC3C,CAAC;EACJ;AACD;AAED,eAAc,SAAU,cAAc,CAA6B,YAAgB,EAAA;EACjF,OAAO,IAAI,WAAW,CAAc,YAAY,CAAC;AACnD","sourceRoot":"","sourcesContent":["import { MixedType } from './MixedType';\nexport class BooleanType extends MixedType {\n    constructor(errorMessage) {\n        super('boolean');\n        super.pushRule({\n            onValid: v => typeof v === 'boolean',\n            errorMessage: errorMessage || this.locale.type\n        });\n    }\n}\nexport default function getBooleanType(errorMessage) {\n    return new BooleanType(errorMessage);\n}\n//# sourceMappingURL=BooleanType.js.map"]},"metadata":{},"sourceType":"module"}