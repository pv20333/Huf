{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Ambiente de Trabalho\\\\yoda-admin-template-react\\\\yoda-admin-template-react\\\\starter-kit\\\\starter-kit\\\\src\\\\view\\\\pages\\\\parametros-padrao\\\\parametros-form\\\\criar-parametros-form\\\\criarform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Button } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DynamicTable = () => {\n  _s();\n  const [dataSource, setDataSource] = useState([{\n    id: 1,\n    name: \"Velocidade\",\n    col1: \"\",\n    col2: \"\"\n  }, {\n    id: 2,\n    name: \"Lim. Pressao\",\n    col1: \"\",\n    col2: \"\"\n  }]);\n  const [columns, setColumns] = useState([{\n    title: \"Etapa1 Pressão\",\n    children: [{\n      title: \"1º Padrão\",\n      dataIndex: \"col1\",\n      key: \"col1\"\n    }, {\n      title: \"2º Padrão\",\n      dataIndex: \"col2\",\n      key: \"col2\"\n    }]\n  }, {\n    title: \"Tolerância\",\n    dataIndex: \"tolerance\",\n    key: \"tolerance\"\n  }]);\n  const handleAddRow = () => {\n    setDataSource(prevDataSource => [...prevDataSource, {\n      // adicione aqui as propriedades da linha que serão preenchidas pelo usuário\n      id: dataSource.length + 1,\n      name: \"\",\n      age: \"\",\n      address: \"\"\n    }]);\n  };\n  const handleAddColumn = () => {\n    setColumns(prevColumns => [...prevColumns.slice(0, -1), {\n      title: `Column ${columns.length}`,\n      children: [{\n        title: \"Sub Linha 1\",\n        dataIndex: `col${columns.length}1`,\n        key: `col${columns.length}1`\n      }, {\n        title: \"Sub Linha 2\",\n        dataIndex: `col${columns.length}2`,\n        key: `col${columns.length}2`\n      }]\n    }, prevColumns[prevColumns.length - 1]]);\n    setDataSource(prevDataSource => prevDataSource.map(row => ({\n      ...row,\n      [`col${columns.length}1`]: \"\",\n      [`col${columns.length}2`]: \"\"\n    })));\n  };\n  const handleDeleteRow = id => {\n    setDataSource(prevDataSource => prevDataSource.filter(row => row.id !== id));\n  };\n  const handleDeleteColumn = columnKey => {\n    setColumns(prevColumns => prevColumns.filter(column => column.key !== columnKey));\n  };\n  const handleRowDataChange = (rowId, newData) => {\n    setDataSource(prevDataSource => prevDataSource.map(row => {\n      if (row.id === rowId) {\n        return {\n          ...row,\n          ...newData\n        };\n      }\n      return row;\n    }));\n  };\n  const handleColumnDataChange = (columnKey, newData) => {\n    setColumns(prevColumns => prevColumns.map(column => {\n      if (column.key === columnKey) {\n        return {\n          ...column,\n          ...newData\n        };\n      }\n      return column;\n    }));\n  };\n  const renderDeleteRowButton = rowId => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => handleDeleteRow(rowId),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n  const renderDeleteColumnButton = columnKey => {\n    if (columnKey === \"tolerance\") {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(Button, {\n      type: \"link\",\n      onClick: () => handleDeleteColumn(columnKey),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleAddColumn,\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: [...columns.map(column => ({\n        ...column,\n        render: (_, row) => {\n          const columnKey = column.key;\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            value: row[columnKey],\n            onChange: e => handleRowDataChange(row.id, {\n              [columnKey]: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this);\n        },\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [column.title, \" \", renderDeleteColumnButton(column.key)]\n        }, void 0, true)\n      })), {\n        title: \"Tolerância\",\n        dataIndex: \"tolerance\",\n        key: \"tolerance\"\n      }],\n      pagination: false,\n      rowKey: \"id\",\n      footer: () => `Total Rows: ${dataSource.length}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(DynamicTable, \"yOIrno7rawb59kE0cgaBBLIK+vI=\");\n_c = DynamicTable;\nexport default DynamicTable;\nvar _c;\n$RefreshReg$(_c, \"DynamicTable\");","map":{"version":3,"names":["React","useState","Table","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","DynamicTable","_s","dataSource","setDataSource","id","name","col1","col2","columns","setColumns","title","children","dataIndex","key","handleAddRow","prevDataSource","length","age","address","handleAddColumn","prevColumns","slice","map","row","handleDeleteRow","filter","handleDeleteColumn","columnKey","column","handleRowDataChange","rowId","newData","handleColumnDataChange","renderDeleteRowButton","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","renderDeleteColumnButton","render","_","value","onChange","e","target","pagination","rowKey","footer","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Ambiente de Trabalho/yoda-admin-template-react/yoda-admin-template-react/starter-kit/starter-kit/src/view/pages/parametros-padrao/parametros-form/criar-parametros-form/criarform.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Button } from \"antd\";\r\n\r\nconst DynamicTable = () => {\r\n  const [dataSource, setDataSource] = useState([\r\n    { id: 1, name: \"Velocidade\", col1: \"\", col2: \"\" },\r\n    { id: 2, name: \"Lim. Pressao\", col1: \"\", col2: \"\" },\r\n  ]);\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      title: \"Etapa1 Pressão\",\r\n      children: [\r\n        { title: \"1º Padrão\", dataIndex: \"col1\", key: \"col1\" },\r\n        { title: \"2º Padrão\", dataIndex: \"col2\", key: \"col2\" },\r\n      ],\r\n    },\r\n    { title: \"Tolerância\", dataIndex: \"tolerance\", key: \"tolerance\" },\r\n  ]);\r\n\r\n  const handleAddRow = () => {\r\n    setDataSource((prevDataSource) => [\r\n      ...prevDataSource,\r\n      {\r\n        // adicione aqui as propriedades da linha que serão preenchidas pelo usuário\r\n        id: dataSource.length + 1,\r\n        name: \"\",\r\n        age: \"\",\r\n        address: \"\",\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleAddColumn = () => {\r\n    setColumns((prevColumns) => [\r\n      ...prevColumns.slice(0, -1),\r\n      {\r\n        title: `Column ${columns.length}`,\r\n        children: [\r\n          {\r\n            title: \"Sub Linha 1\",\r\n            dataIndex: `col${columns.length}1`,\r\n            key: `col${columns.length}1`,\r\n          },\r\n          {\r\n            title: \"Sub Linha 2\",\r\n            dataIndex: `col${columns.length}2`,\r\n            key: `col${columns.length}2`,\r\n          },\r\n        ],\r\n      },\r\n      prevColumns[prevColumns.length - 1],\r\n    ]);\r\n\r\n    setDataSource((prevDataSource) =>\r\n      prevDataSource.map((row) => ({\r\n        ...row,\r\n        [`col${columns.length}1`]: \"\",\r\n        [`col${columns.length}2`]: \"\",\r\n      }))\r\n    );\r\n  };\r\n\r\n  const handleDeleteRow = (id) => {\r\n    setDataSource((prevDataSource) =>\r\n      prevDataSource.filter((row) => row.id !== id)\r\n    );\r\n  };\r\n\r\n  const handleDeleteColumn = (columnKey) => {\r\n    setColumns((prevColumns) =>\r\n      prevColumns.filter((column) => column.key !== columnKey)\r\n    );\r\n  };\r\n\r\n  const handleRowDataChange = (rowId, newData) => {\r\n    setDataSource((prevDataSource) =>\r\n      prevDataSource.map((row) => {\r\n        if (row.id === rowId) {\r\n          return {\r\n            ...row,\r\n            ...newData,\r\n          };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleColumnDataChange = (columnKey, newData) => {\r\n    setColumns((prevColumns) =>\r\n      prevColumns.map((column) => {\r\n        if (column.key === columnKey) {\r\n          return {\r\n            ...column,\r\n            ...newData,\r\n          };\r\n        }\r\n        return column;\r\n      })\r\n    );\r\n  };\r\n\r\n  const renderDeleteRowButton = (rowId) => {\r\n    return (\r\n      <Button type=\"link\" onClick={() => handleDeleteRow(rowId)}>\r\n        Delete\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const renderDeleteColumnButton = (columnKey) => {\r\n    if (columnKey === \"tolerance\") {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Button type=\"link\" onClick={() => handleDeleteColumn(columnKey)}>\r\n        Delete\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button type=\"primary\" onClick={handleAddRow}>\r\n        Add Row\r\n      </Button>\r\n      <Button type=\"primary\" onClick={handleAddColumn}>\r\n        Add Column\r\n      </Button>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={[\r\n          ...columns.map((column) => ({\r\n            ...column,\r\n            render: (_, row) => {\r\n              const columnKey = column.key;\r\n              return (\r\n                <input\r\n                  value={row[columnKey]}\r\n                  onChange={(e) =>\r\n                    handleRowDataChange(row.id, {\r\n                      [columnKey]: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n              );\r\n            },\r\n            title: (\r\n              <>\r\n                {column.title} {renderDeleteColumnButton(column.key)}\r\n              </>\r\n            ),\r\n          })),\r\n          { title: \"Tolerância\", dataIndex: \"tolerance\", key: \"tolerance\" },\r\n        ]}\r\n        pagination={false}\r\n        rowKey=\"id\"\r\n        footer={() => `Total Rows: ${dataSource.length}`}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}