{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\OneDrive\\\\Documentos\\\\GitHub\\\\Huf\\\\Frontend\\\\src\\\\view\\\\pages\\\\preencher-PP\\\\preencher-formulario.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Select, Table, Button, Input } from \"antd\";\nimport Swal from 'sweetalert2';\nimport TabelaMoldes from \"./tabelaMoldes\";\nimport TabelaMP from \"./tabelaMP\";\nimport TabelaMaquinas from \"./tabelaMaquinass\";\nimport '../../components/styles/tabelas.css';\nimport Ator from \"../../components/nameProfile/NameProfile\";\nimport { display } from \"html2canvas/dist/types/css/property-descriptors/display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nfunction RenderizarFormulario() {\n  _s();\n  const [formularios, setFormularios] = useState([]);\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\n  const [tabelaRespostas, setTabelaRespostas] = useState({}); // Adicionado estado para armazenar as respostas\n  const [designacao, setDesignacao] = useState('');\n  const [showTables, setShowTables] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/editarformulario/formularios\").then(res => {\n      setFormularios(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter formulários\", error);\n    });\n  }, []);\n  const handleFormularioChange = value => {\n    setSelectedFormulario(value);\n    setShowTables(true);\n    axios.get(`http://localhost:8080/api/editarformulario/formularios/${value}`).then(res => {\n      console.log('Dados da API:', res.data);\n      setTabelasFormulario(res.data);\n    }).catch(error => {\n      console.error(\"Erro ao obter tabelas do formulário\", error);\n    });\n  };\n  console.log('tabelasFormulario:', tabelasFormulario);\n\n  // const handleInputChange = (columnKey, tableIndex, rowIndex) => (\n  //   e\n  // ) => {\n  //   const newData = {...tabelaRespostas}; // Copia a tabela de respostas\n\n  //   // Atualiza a resposta no objeto\n  //   if(!newData[tableIndex]) newData[tableIndex] = {};\n  //   if(!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\n  //   newData[tableIndex][rowIndex][columnKey] = e.target.value;\n\n  //   setTabelaRespostas(newData); // Atualiza o estado da tabela de respostas\n  // };\n\n  const handleInputChange = (columnKey, n_tabelaColuna, tableIndex, rowIndex) => e => {\n    const newData = {\n      ...tabelaRespostas\n    }; // Copy the response table\n\n    // Update the response in the object\n    if (!newData[tableIndex]) newData[tableIndex] = {};\n    if (!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\n\n    // Concatenate columnKey and n_tabelaColuna\n    const uniqueKey = `${columnKey}_${n_tabelaColuna}`;\n    newData[tableIndex][rowIndex][uniqueKey] = e.target.value;\n    setTabelaRespostas(newData); // Update the state of the response table\n  };\n\n  const setDefaultInput = (columnKey, n_tabelaColuna, tableIndex, rowIndex) => {\n    const newData = {\n      ...tabelaRespostas\n    }; // Copy the response table\n\n    // Update the response in the object\n    if (!newData[tableIndex]) newData[tableIndex] = {};\n    if (!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\n\n    // Concatenate columnKey and n_tabelaColuna\n    const uniqueKey = `${columnKey}_${n_tabelaColuna}`;\n    newData[tableIndex][rowIndex][uniqueKey] = \"\";\n    setTabelaRespostas(newData); // Update the state of the response table\n  };\n\n  const handleDesignacaoChange = e => {\n    setDesignacao(e.target.value);\n  };\n  const handleGuardar = () => {\n    if (designacao == null || designacao.length == 0 || designacao == \"\") {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Thats a nono, you need a descrption men dont be stupid'\n      });\n      return;\n    }\n    const parametroPadrao = {\n      designacao\n    };\n    axios.post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarparametropadrao`, parametroPadrao).then(res => {\n      console.log(res);\n      const n_ParametroPadrao = res.data.n_ParametroPadrao; // Obtém o ID do novo parâmetro padrão criado\n\n      Object.keys(tabelaRespostas).forEach(tableIndex => {\n        var _tabelasFormulario$ta, _tabelasFormulario$ta2, _tabelasFormulario$ta3;\n        const n_TabelaRespostas = Number(tableIndex); // Esta é uma suposição. Você deve substituir isso pela lógica correta.\n\n        (_tabelasFormulario$ta = tabelasFormulario[tableIndex]) === null || _tabelasFormulario$ta === void 0 ? void 0 : (_tabelasFormulario$ta2 = _tabelasFormulario$ta.TabelaGeral) === null || _tabelasFormulario$ta2 === void 0 ? void 0 : (_tabelasFormulario$ta3 = _tabelasFormulario$ta2.Colunas) === null || _tabelasFormulario$ta3 === void 0 ? void 0 : _tabelasFormulario$ta3.forEach(coluna => {\n          const n_TabelaColunas = coluna.n_TabelaColunas;\n          Object.keys(tabelaRespostas[tableIndex]).forEach(rowIndex => {\n            // Create a unique key to access the responses\n            const uniqueKey = `${coluna.TituloColunas}_${n_TabelaColunas}`;\n            const resposta = {\n              n_TabelaRespostas,\n              n_ParametroPadrao,\n              n_TabelaColunas,\n              respostas: tabelaRespostas[tableIndex][rowIndex][uniqueKey]\n            };\n            console.log('Enviando resposta:', resposta); // <-- Log aqui\n\n            axios.post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarrespostas`, resposta).then(res => {\n              console.log(res);\n            }).catch(error => {\n              console.error(\"Erro ao adicionar respostas\", error);\n            });\n          });\n        });\n      });\n    }).catch(error => {\n      console.error(\"Erro ao guardar\", error);\n    });\n  };\n  const handleSubmeter = () => {\n    const parametroPadrao = {\n      designacao\n    };\n    axios.post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/submeter`, parametroPadrao).then(res => {\n      console.log(res);\n      const n_ParametroPadrao = res.data.n_ParametroPadrao;\n      Object.keys(tabelaRespostas).forEach(tableIndex => {\n        var _tabelasFormulario$ta4, _tabelasFormulario$ta5, _tabelasFormulario$ta6;\n        const n_TabelaRespostas = Number(tableIndex);\n        (_tabelasFormulario$ta4 = tabelasFormulario[tableIndex]) === null || _tabelasFormulario$ta4 === void 0 ? void 0 : (_tabelasFormulario$ta5 = _tabelasFormulario$ta4.TabelaGeral) === null || _tabelasFormulario$ta5 === void 0 ? void 0 : (_tabelasFormulario$ta6 = _tabelasFormulario$ta5.Colunas) === null || _tabelasFormulario$ta6 === void 0 ? void 0 : _tabelasFormulario$ta6.forEach(coluna => {\n          const n_TabelaColunas = coluna.n_TabelaColunas;\n          Object.keys(tabelaRespostas[tableIndex]).forEach(rowIndex => {\n            const resposta = {\n              n_TabelaRespostas,\n              n_ParametroPadrao,\n              n_TabelaColunas,\n              respostas: tabelaRespostas[tableIndex][rowIndex][coluna.TituloColunas]\n            };\n            console.log('Submetendo resposta:', resposta);\n            axios.post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarrespostas`, resposta).then(res => {\n              console.log(res);\n            }).catch(error => {\n              console.error(\"Erro ao adicionar respostas\", error);\n            });\n          });\n        });\n      });\n    }).catch(error => {\n      console.error(\"Erro ao submeter\", error);\n    });\n  };\n  const initializeTabelaRespostas = tabelas => {\n    const initialData = {};\n    if (Array.isArray(tabelas)) {\n      tabelas.forEach((tabela, tableIndex) => {\n        var _tabela$TabelaGeral, _tabela$TabelaGeral$C;\n        console.log(`Inicializando dados para a tabela ${tableIndex}`);\n        initialData[tableIndex] = {};\n        tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral = tabela.TabelaGeral) === null || _tabela$TabelaGeral === void 0 ? void 0 : (_tabela$TabelaGeral$C = _tabela$TabelaGeral.Colunas) === null || _tabela$TabelaGeral$C === void 0 ? void 0 : _tabela$TabelaGeral$C.forEach(coluna => {\n          var _tabela$TabelaGeral$n, _tabela$TabelaGeral2;\n          const uniqueKey = `${coluna.TituloColunas}_${coluna.n_TabelaColunas}`;\n\n          // Suponho que você tenha um número específico de linhas para inicializar. Usando a propriedade numero_linhas.\n          const numLinhas = (_tabela$TabelaGeral$n = tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral2 = tabela.TabelaGeral) === null || _tabela$TabelaGeral2 === void 0 ? void 0 : _tabela$TabelaGeral2.numero_linhas) !== null && _tabela$TabelaGeral$n !== void 0 ? _tabela$TabelaGeral$n : 0;\n          for (let rowIndex = 0; rowIndex < numLinhas; rowIndex++) {\n            if (!initialData[tableIndex][rowIndex]) {\n              initialData[tableIndex][rowIndex] = {};\n            }\n            initialData[tableIndex][rowIndex][uniqueKey] = ''; // valor padrão para a entrada\n          }\n        });\n      });\n    }\n\n    setTabelaRespostas(initialData); // Atualizando o estado com os valores padrões.\n    console.log(\"---------------setTabelaRespostas\");\n    console.log(initialData);\n  };\n  useEffect(() => {\n    initializeTabelaRespostas(tabelasFormulario);\n  }, [tabelasFormulario]);\n  const inlineBlock = {\n    display: 'inline-block'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter the name of the default parameter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onChange: handleDesignacaoChange,\n      value: designacao\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: inlineBlock,\n      children: [\"Author: \", /*#__PURE__*/_jsxDEV(Ator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Chose a Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 200\n      },\n      onChange: handleFormularioChange,\n      children: formularios.map(formulario => /*#__PURE__*/_jsxDEV(Option, {\n        value: formulario.n_Formularios,\n        children: formulario.designacao\n      }, formulario.n_Formularios, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabelaMaquinas, {\n      show: showTables\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabelaMoldes, {\n      show: showTables\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabelaMP, {\n      show: showTables\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), Array.isArray(tabelasFormulario) && tabelasFormulario.map((tabela, tableIndex) => {\n      var _tabela$TabelaGeral$C2, _tabela$TabelaGeral3, _tabela$TabelaGeral3$, _tabela$TabelaGeral$n2, _tabela$TabelaGeral4;\n      console.log(`Renderizando a tabela ${tableIndex}`);\n      const columns = (_tabela$TabelaGeral$C2 = tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral3 = tabela.TabelaGeral) === null || _tabela$TabelaGeral3 === void 0 ? void 0 : (_tabela$TabelaGeral3$ = _tabela$TabelaGeral3.Colunas) === null || _tabela$TabelaGeral3$ === void 0 ? void 0 : _tabela$TabelaGeral3$.map(coluna => {\n        return {\n          title: coluna.TituloColunas,\n          dataIndex: coluna.TituloColunas,\n          key: coluna.n_TabelaColunas,\n          render: (text, _, rowIndex) => {\n            var _tabelaRespostas$tabl, _tabelaRespostas$tabl2, _tabelaRespostas$tabl3;\n            return /*#__PURE__*/_jsxDEV(Input\n            //value={tabelaRespostas[tableIndex]?.[rowIndex]?.[coluna.TituloColunas] ?? ''} \n            //value={tableIndex + \" | \" + rowIndex + \" | \" + coluna.n_TabelaColunas} \n            , {\n              value: (_tabelaRespostas$tabl = (_tabelaRespostas$tabl2 = tabelaRespostas[tableIndex]) === null || _tabelaRespostas$tabl2 === void 0 ? void 0 : (_tabelaRespostas$tabl3 = _tabelaRespostas$tabl2[rowIndex]) === null || _tabelaRespostas$tabl3 === void 0 ? void 0 : _tabelaRespostas$tabl3[`${coluna.TituloColunas}_${coluna.n_TabelaColunas}`]) !== null && _tabelaRespostas$tabl !== void 0 ? _tabelaRespostas$tabl : ''\n\n              //onChange={handleInputChange(coluna.TituloColunas, tableIndex, rowIndex)} \n              ,\n              onChange: handleInputChange(coluna.TituloColunas, coluna.n_TabelaColunas, tableIndex, rowIndex),\n              disabled: coluna.Real == \"S\" ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this);\n          }\n        };\n      })) !== null && _tabela$TabelaGeral$C2 !== void 0 ? _tabela$TabelaGeral$C2 : [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: Array.from({\n            length: (_tabela$TabelaGeral$n2 = tabela === null || tabela === void 0 ? void 0 : (_tabela$TabelaGeral4 = tabela.TabelaGeral) === null || _tabela$TabelaGeral4 === void 0 ? void 0 : _tabela$TabelaGeral4.numero_linhas) !== null && _tabela$TabelaGeral$n2 !== void 0 ? _tabela$TabelaGeral$n2 : 0\n          }, (_, i) => ({\n            key: i\n          })),\n          pagination: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, tableIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleGuardar,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmeter,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(RenderizarFormulario, \"jiR4xpSIUudv0Z0+4N9A9v4fgtA=\");\n_c = RenderizarFormulario;\nexport default RenderizarFormulario;\nvar _c;\n$RefreshReg$(_c, \"RenderizarFormulario\");","map":{"version":3,"names":["React","useState","useEffect","axios","Select","Table","Button","Input","Swal","TabelaMoldes","TabelaMP","TabelaMaquinas","Ator","display","jsxDEV","_jsxDEV","Option","RenderizarFormulario","_s","formularios","setFormularios","selectedFormulario","setSelectedFormulario","tabelasFormulario","setTabelasFormulario","tabelaRespostas","setTabelaRespostas","designacao","setDesignacao","showTables","setShowTables","get","then","res","data","catch","error","console","handleFormularioChange","value","log","handleInputChange","columnKey","n_tabelaColuna","tableIndex","rowIndex","e","newData","uniqueKey","target","setDefaultInput","handleDesignacaoChange","handleGuardar","length","fire","icon","title","text","parametroPadrao","post","n_ParametroPadrao","Object","keys","forEach","_tabelasFormulario$ta","_tabelasFormulario$ta2","_tabelasFormulario$ta3","n_TabelaRespostas","Number","TabelaGeral","Colunas","coluna","n_TabelaColunas","TituloColunas","resposta","respostas","handleSubmeter","_tabelasFormulario$ta4","_tabelasFormulario$ta5","_tabelasFormulario$ta6","initializeTabelaRespostas","tabelas","initialData","Array","isArray","tabela","_tabela$TabelaGeral","_tabela$TabelaGeral$C","_tabela$TabelaGeral$n","_tabela$TabelaGeral2","numLinhas","numero_linhas","inlineBlock","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","width","map","formulario","n_Formularios","show","_tabela$TabelaGeral$C2","_tabela$TabelaGeral3","_tabela$TabelaGeral3$","_tabela$TabelaGeral$n2","_tabela$TabelaGeral4","columns","dataIndex","key","render","_","_tabelaRespostas$tabl","_tabelaRespostas$tabl2","_tabelaRespostas$tabl3","disabled","Real","marginBottom","dataSource","from","i","pagination","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tiago/OneDrive/Documentos/GitHub/Huf/Frontend/src/view/pages/preencher-PP/preencher-formulario.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Select, Table, Button, Input } from \"antd\";\r\nimport Swal from 'sweetalert2';\r\nimport TabelaMoldes from \"./tabelaMoldes\";\r\nimport TabelaMP from \"./tabelaMP\";\r\nimport TabelaMaquinas from \"./tabelaMaquinass\"\r\nimport '../../components/styles/tabelas.css'\r\nimport Ator from \"../../components/nameProfile/NameProfile\"\r\nimport { display } from \"html2canvas/dist/types/css/property-descriptors/display\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nfunction RenderizarFormulario() {\r\n  const [formularios, setFormularios] = useState([]);\r\n  const [selectedFormulario, setSelectedFormulario] = useState(null);\r\n  const [tabelasFormulario, setTabelasFormulario] = useState([]);\r\n  const [tabelaRespostas, setTabelaRespostas] = useState({}); // Adicionado estado para armazenar as respostas\r\n  const [designacao, setDesignacao] = useState('');\r\n  const [showTables, setShowTables] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8080/api/editarformulario/formularios\")\r\n      .then((res) => {\r\n        setFormularios(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter formulários\", error);\r\n      });\r\n  }, []);\r\n\r\n  const handleFormularioChange = (value) => {\r\n    setSelectedFormulario(value);\r\n    setShowTables(true); \r\n    axios\r\n      .get(`http://localhost:8080/api/editarformulario/formularios/${value}`)\r\n      .then((res) => {\r\n        console.log('Dados da API:', res.data);\r\n        setTabelasFormulario(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao obter tabelas do formulário\", error);\r\n      });\r\n  };\r\n\r\n  console.log('tabelasFormulario:', tabelasFormulario);\r\n\r\n  // const handleInputChange = (columnKey, tableIndex, rowIndex) => (\r\n  //   e\r\n  // ) => {\r\n  //   const newData = {...tabelaRespostas}; // Copia a tabela de respostas\r\n    \r\n  //   // Atualiza a resposta no objeto\r\n  //   if(!newData[tableIndex]) newData[tableIndex] = {};\r\n  //   if(!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\r\n  //   newData[tableIndex][rowIndex][columnKey] = e.target.value;\r\n\r\n  //   setTabelaRespostas(newData); // Atualiza o estado da tabela de respostas\r\n  // };\r\n\r\n  const handleInputChange = (columnKey, n_tabelaColuna, tableIndex, rowIndex) => (\r\n    e\r\n  ) => {\r\n    const newData = {...tabelaRespostas}; // Copy the response table\r\n    \r\n    // Update the response in the object\r\n    if(!newData[tableIndex]) newData[tableIndex] = {};\r\n    if(!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\r\n    \r\n    // Concatenate columnKey and n_tabelaColuna\r\n    const uniqueKey = `${columnKey}_${n_tabelaColuna}`;\r\n    \r\n    newData[tableIndex][rowIndex][uniqueKey] = e.target.value;\r\n  \r\n    setTabelaRespostas(newData); // Update the state of the response table\r\n  };\r\n\r\n  const setDefaultInput = (columnKey, n_tabelaColuna, tableIndex, rowIndex) => {\r\n    const newData = {...tabelaRespostas}; // Copy the response table\r\n    \r\n    // Update the response in the object\r\n    if(!newData[tableIndex]) newData[tableIndex] = {};\r\n    if(!newData[tableIndex][rowIndex]) newData[tableIndex][rowIndex] = {};\r\n    \r\n    // Concatenate columnKey and n_tabelaColuna\r\n    const uniqueKey = `${columnKey}_${n_tabelaColuna}`;\r\n    \r\n    newData[tableIndex][rowIndex][uniqueKey] = \"\";\r\n  \r\n    setTabelaRespostas(newData); // Update the state of the response table\r\n  };\r\n\r\n  const handleDesignacaoChange = (e) => {\r\n    setDesignacao(e.target.value);\r\n  };\r\n\r\n  const handleGuardar = () => {\r\n\r\n    if(designacao == null || designacao.length == 0 || designacao == \"\"){\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'Thats a nono, you need a descrption men dont be stupid',\r\n      })\r\n      return\r\n    }\r\n\r\n    const parametroPadrao = {\r\n      designacao\r\n    };\r\n  \r\n    axios\r\n      .post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarparametropadrao`, parametroPadrao)\r\n      .then((res) => {\r\n        console.log(res);\r\n        const n_ParametroPadrao = res.data.n_ParametroPadrao; // Obtém o ID do novo parâmetro padrão criado\r\n\r\n        Object.keys(tabelaRespostas).forEach((tableIndex) => {\r\n          const n_TabelaRespostas = Number(tableIndex);  // Esta é uma suposição. Você deve substituir isso pela lógica correta.\r\n\r\n          tabelasFormulario[tableIndex]?.TabelaGeral?.Colunas?.forEach((coluna) => {\r\n            const n_TabelaColunas = coluna.n_TabelaColunas;\r\n\r\n            Object.keys(tabelaRespostas[tableIndex]).forEach((rowIndex) => {\r\n              // Create a unique key to access the responses\r\n              const uniqueKey = `${coluna.TituloColunas}_${n_TabelaColunas}`;\r\n\r\n              const resposta = {\r\n                n_TabelaRespostas,\r\n                n_ParametroPadrao,\r\n                n_TabelaColunas,\r\n                respostas: tabelaRespostas[tableIndex][rowIndex][uniqueKey]\r\n              };\r\n\r\n              console.log('Enviando resposta:', resposta); // <-- Log aqui\r\n  \r\n              axios\r\n                .post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarrespostas`, resposta)\r\n                .then((res) => {\r\n                  console.log(res);\r\n                })\r\n                .catch((error) => {\r\n                  console.error(\"Erro ao adicionar respostas\", error);\r\n                });\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao guardar\", error);\r\n      });\r\n  };\r\n\r\n\r\n  const handleSubmeter = () => {\r\n    const parametroPadrao = {\r\n      designacao\r\n    };\r\n\r\n  \r\n    axios\r\n      .post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/submeter`, parametroPadrao)\r\n      .then((res) => {\r\n        console.log(res);\r\n        const n_ParametroPadrao = res.data.n_ParametroPadrao;\r\n  \r\n        Object.keys(tabelaRespostas).forEach((tableIndex) => {\r\n          const n_TabelaRespostas = Number(tableIndex);\r\n  \r\n          tabelasFormulario[tableIndex]?.TabelaGeral?.Colunas?.forEach((coluna) => {\r\n            const n_TabelaColunas = coluna.n_TabelaColunas;\r\n  \r\n            Object.keys(tabelaRespostas[tableIndex]).forEach((rowIndex) => {\r\n              const resposta = {\r\n                n_TabelaRespostas,\r\n                n_ParametroPadrao,\r\n                n_TabelaColunas,\r\n                respostas: tabelaRespostas[tableIndex][rowIndex][coluna.TituloColunas]\r\n              };\r\n  \r\n              console.log('Submetendo resposta:', resposta);\r\n  \r\n              axios\r\n                .post(`http://localhost:8080/api/preencherformulario/formularios/${selectedFormulario}/adicionarrespostas`, resposta)\r\n                .then((res) => {\r\n                  console.log(res);\r\n                })\r\n                .catch((error) => {\r\n                  console.error(\"Erro ao adicionar respostas\", error);\r\n                });\r\n            });\r\n          });\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Erro ao submeter\", error);\r\n      });\r\n  };\r\n\r\n  const initializeTabelaRespostas = (tabelas) => {\r\n    const initialData = {};\r\n  \r\n    if (Array.isArray(tabelas)) {\r\n      tabelas.forEach((tabela, tableIndex) => {\r\n        console.log(`Inicializando dados para a tabela ${tableIndex}`);\r\n        \r\n        initialData[tableIndex] = {};\r\n  \r\n        tabela?.TabelaGeral?.Colunas?.forEach((coluna) => {\r\n          const uniqueKey = `${coluna.TituloColunas}_${coluna.n_TabelaColunas}`;\r\n  \r\n          // Suponho que você tenha um número específico de linhas para inicializar. Usando a propriedade numero_linhas.\r\n          const numLinhas = tabela?.TabelaGeral?.numero_linhas ?? 0;\r\n          for (let rowIndex = 0; rowIndex < numLinhas; rowIndex++) {\r\n            if (!initialData[tableIndex][rowIndex]) {\r\n              initialData[tableIndex][rowIndex] = {};\r\n            }\r\n            initialData[tableIndex][rowIndex][uniqueKey] = ''; // valor padrão para a entrada\r\n          }\r\n        });\r\n      });\r\n    }\r\n  \r\n    setTabelaRespostas(initialData);  // Atualizando o estado com os valores padrões.\r\n    console.log(\"---------------setTabelaRespostas\")\r\n    console.log(initialData)\r\n  };\r\n  \r\n  useEffect(() => {\r\n    initializeTabelaRespostas(tabelasFormulario);\r\n  }, [tabelasFormulario]);\r\n\r\n  const inlineBlock = {\r\n    display: 'inline-block',\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h3>Enter the name of the default parameter</h3>\r\n      <Input onChange={handleDesignacaoChange} value={designacao} />\r\n      <br />\r\n      <h4 style={inlineBlock}>Author: <Ator/></h4>\r\n\r\n      <h3>Chose a Form</h3>\r\n      <Select style={{ width: 200 }} onChange={handleFormularioChange}>\r\n        {formularios.map((formulario) => (\r\n          <Option\r\n            key={formulario.n_Formularios}\r\n            value={formulario.n_Formularios}\r\n          >\r\n            {formulario.designacao}\r\n          </Option>\r\n        ))}\r\n      </Select>\r\n      <br />\r\n      <TabelaMaquinas show={showTables} />\r\n      <br />\r\n      <TabelaMoldes show={showTables} />\r\n      <br />\r\n      <TabelaMP show={showTables} />\r\n\r\n      <br/>\r\n\r\n      {Array.isArray(tabelasFormulario) && tabelasFormulario.map((tabela, tableIndex) => {\r\n        console.log(`Renderizando a tabela ${tableIndex}`);\r\n        const columns = tabela?.TabelaGeral?.Colunas?.map((coluna) => {\r\n          return {\r\n            title: coluna.TituloColunas,\r\n            dataIndex: coluna.TituloColunas,\r\n            key: coluna.n_TabelaColunas,\r\n            render: (text, _, rowIndex) => (\r\n              <Input \r\n                //value={tabelaRespostas[tableIndex]?.[rowIndex]?.[coluna.TituloColunas] ?? ''} \r\n                //value={tableIndex + \" | \" + rowIndex + \" | \" + coluna.n_TabelaColunas} \r\n                value={tabelaRespostas[tableIndex]?.[rowIndex]?.[`${coluna.TituloColunas}_${coluna.n_TabelaColunas}`] ?? ''}\r\n\r\n\r\n                //onChange={handleInputChange(coluna.TituloColunas, tableIndex, rowIndex)} \r\n                onChange={handleInputChange(coluna.TituloColunas, coluna.n_TabelaColunas, tableIndex, rowIndex)}\r\n\r\n\r\n                disabled={coluna.Real == \"S\" ? true : false }\r\n              />\r\n            )\r\n          }\r\n        }) ?? [];\r\n        return (\r\n          <div key={tableIndex} style={{ marginBottom: \"20px\" }}>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={Array.from(\r\n                { length: tabela?.TabelaGeral?.numero_linhas ?? 0 },\r\n                (_, i) => ({\r\n                  key: i\r\n                })\r\n              )}\r\n              pagination={false}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <Button onClick={handleGuardar}>Save</Button>\r\n      <Button onClick={handleSubmeter}>Submit</Button>\r\n\r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default RenderizarFormulario;"],"mappings":"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"},"metadata":{},"sourceType":"module"}